Here is what needs defined before we start coding:

1.  What is included in SquirrelCore
2.  Interaction between SquirrelCore and SquirrelApps
3.  Templating should be universal between all SquirrelApps, how will this happen?

--------------

Concept:

 SquirrelCore
	+-- index.php (starter *1)
	+-- Libraries (*2)
	|     +-- Hello API
	|     +-- Preference API
	|     +-- Logger API
	|     
	+-- Modules (*2)
	|     +-- Hello API
	|           +-- simple.php
	|           +-- filesystem.php
	|     +-- Preference API
	|           +-- mysql.php
	|           +-- filesystem.php
	|           +-- oracle.php
	|     +-- Logger API
	|           +-- syslog.php
	|           +-- email.php
	|           +-- pager.php
	|     
	+-- Templates (*3)
	|     +-- Classic
	|     |     +-- SquirrelHello
	|     |      
	|     +-- Slashdot 
	|     |     +-- SquirrelHello
        |     |
	|     +-- Blue Steel
	|           +-- SquirrelHello
	|
	+-- Apps (*4)
	      +-- SquirrelHello
	            +-- SquirrelHello Noframes Controller
	            +-- SquirrelHello Frames Controller

*1: This starter will detect what apps are installed under it, 
    and perhaps to save from having to detect every time, it will
	read which ones are configured.  Then act accordingly.

*2: The libraries are used universally for all SquirrelApps.
    These are the API implementations that we have been talking
	so much about.

*3: Templates are defined under this directory.  If for some 
    installed app, there isn't a theme, it will revert to the
	default theme for that app.  This will never happen with 
	themes that we support (we will create them universally)
	but the case should be there for unsupported themes.

*4: The Apps will be loaded dynamically inside the *1 part
    depending on how they're implemented.  Probably, this will
	be the wrapper around the controller which loads the libraries
	and everything, and formats the data using the given template
	in *3.
