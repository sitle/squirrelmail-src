<!doctype linuxdoc system>
<!--
 $Id$
 
 Copyright (c) 2005-2008 The SquirrelMail Project Team
 This file is part of SquirrelMail webmail interface documentation.

 SquirrelMail is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 SquirrelMail is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with SquirrelMail; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 02110-1301, USA
-->
<article>
<title>		SquirrelMail Translator's Manual
<author>
by the SquirrelMail Project Team:
<!-- put your name here -->
</author>

<sect>Overview
<sect1>Translation policy
<sect2>Management of translations (from 1.5.0+ and 1.4.4+)
<p>
All SquirrelMail translations are stored in the locales directory of the
SquirrelMail repository. This directroy contains translations of SquirrelMail
strings and translations of plugins. Plugin developers can use their own
translation packages or rely on translations in the SquirrelMail locales module.
If a plugin's translation is not included in the SquirrelMail module, the plugin
developer should switch to her/his own gettext domain before using the plugin's
own strings.

The HEAD branch of the locales module contains combined strings from
SquirrelMail DEVEL and STABLE branches. For example, on 2004-11-23, translations
from HEAD can be used with 1.5.1cvs and with 1.4.4cvs.

When SquirrelMail freezes strings in some release, i18n developers will branch
HEAD locales to a SM-x_x_x branch and replace the string template with the one
that contains strings included only in the selected SquirrelMail version.
Strings should be frozen two weeks before planned SquirrelMail release date.

SquirrelMail translations are distributed in packages separate from the main
SquirrelMail package. Translation packages should be created within one week
after any SquirrelMail release. If translation updates are received after a
SquirrelMail release, developers can create other locales packages that include
the updated translations.

Only HEAD, latest STABLE and latest DEVEL version branches are actively
maintained.

<sect2>Submitting translations
<p>
New and updated SquirrelMail translations can be submitted to the
squirrelmail-i18n mailing list.

New translations should be licensed under the GNU GPL or another <url
url="http://www.opensource.org/licenses/" name="open license"> or
copyright should be assigned to SquirrelMail developers.

Any translated GNU Gettext Portable Object (PO) file should pass <tt>msgfmt -v
-c -o /dev/null squirrelmail.po</tt> test without any warning or error messages.

A translation is supported only when the number of translated strings exceeds
50% of all strings in <tt/squirrelmail.po/. A translation can be declared unsupported
if it includes translations in other languages. A translation can be treated as
supported if the language is similar to American English and only some spelling
changes are needed.

Supported translations can be updated by the translation maintainer or member of
the translation team. Other people should get approval from the translation
maintainer or a member of the translation team. If a translation maintainer does
not reply to emails, SquirrelMail developers may assign maintenance of that
translation to another person.

An unsupported translation can be updated by anyone who is willing to take over
maintenance of that translation.

If a new translation uses a charset unsupported by existing SquirrelMail
decoding/encoding functions, there should be a charset mapping to Unicode
distributed under an open license or in the public domain.

<sect2>Developers, Coordinators, Translators
<p>
Only SquirrelMail developers have write access to the SquirrelMail repository.
They commit all translations created by other people to the repository.

Coordinators maintain translations in some language. If person agrees to be
coordinator, it should be indicated in TRANSLATORS file and person's approval is
required for all SquirrelMail translations in that language.

Translators maintain only files that they have translated.

I18n developers and coordinators must be subscribed to the i18n mailing list.
The translators are not required to subscribe to the list. When a developer
commit a translation to the repository, he/she also has to inform the translator
and the i18n mailing list.

<sect1>Separate translations packages
<p>
Since SquirrelMail 1.4.4 and 1.5.0, translations are separated from the main
SquirrelMail package. This means that an extra installation step is required if
you want to use other languages than American English. By having separate
translation packages we can:

<itemize>
  <item>update translations more often that SquirrelMail releases,
  <item>include other plugin translations,
  <item>create combined SquirrelMail and plugins statistics without "download
        all plugins, find translated ones, rearrange them" scripts, and
  <item>reduce the size of the SquirrelMail core package from 13 MB to 4 MB (or
        550 KB packed).
</itemize>

The repository contains a branch for every SquirrelMail verison and a HEAD
branch. Only the current STABLE, DEVEL, and the HEAD branches are maintained.
Every time a new version of SquirrelMail is released, a separate branch of
locales will be created and translation packages for that SquirrelMail version
will be released. Translators are strongly encouraged to use SquirrelMail
locales HEAD branch for their translations.

<sect1>Translation method
<p>
SquirrelMail uses <url url="http://www.gnu.org/software/gettext" name="gettext">
based translations. Strings in code use special formating. xgettext program
allows extracting the strings from code. msgmerge program combines extracted
strings with the ones that are already translated. msgfmt programs compiles
gettext strings into binary format. SquirrelMail translations are stored in
locale/*/LC_MESSAGES/squirrelmail.po files. Binary translations are stored in
locale/*/LC_MESSAGES/squirrelmail.mo files.

SquirrelMail does not depend on gettext support in php. If gettext support is
present, SquirrelMail uses it. If there is no php gettext support, SquirrelMail
uses own gettext functions. PHP gettext operates with .mo files, SquirrelMail
gettext uses .po files.

See <url url="http://www.gnu.org/manual/gettext/html_mono/gettext.html"
name="gettext manual"> for more information about gettext.

<sect1>Translation tools
<p>
To translate the actual strings fill in the msgstr after each msgid with the 
appropriate translation. There are a few tools which can make this job a bit
easier.

<url
url="http://i18n.kde.org/translation-howto/specialized-programs.html#gui-tools"
name="http://i18n.kde.org/translation-howto/specialized-programs.html#gui-tools">

<sect2>Gettext
<p>
<url url="http://www.gnu.org/software/gettext/" 
name="http://www.gnu.org/software/gettext/">

<sect2>KBabel
<p>
KBabel is a set of tools for editing and managing PO files created by
gettext. Its main component is a powerful and comfortable PO file editor which
features full navigation capabilities, full editing functionality, the ability
to search for translations in different dictionaries, spell and syntax checking,
showing diffs, and much more. It also includes a "Catalog Manager", which is a
file manager view that provides an overview of PO files. Last but not least, it
includes a standalone dictionary application which provides the additional
capability of accessing KBabel's powerful dictionaries.

<url url="http://apps.kde.com/na/2/info/id/628" name="http://apps.kde.com/na/2/info/id/628">

<sect2>Gtranslator
<p>
gtranslator offers a comfortable, colored, and easy way to edit gettext po files
and all other flavors of po files (po.gz, mo/gmo) with many comfortable
function like find, replace, autoaccomplishment, query capability and personal
learn buffer (TM). The GUI also offers you a very nice messages tree to see the
translations grouped by status (untranslated, fuzzy) and with customizable
colors for the rows.

<url url="http://www.gtranslator.org/" name="http://www.gtranslator.org/">

<sect2>PoEdit
<p>
poEdit is cross-platform (Win32/Linux/Unix) gettext catalogs (.po files)
editor. It is built with the wxWindows toolkit. It aims to provide a convenient
way of editing gettext catalogs with features such as fuzzy and untranslated
records highlighting, whitespace highlighting, references browser, and header
editing, and can also be used to create new catalogs or update existing catalogs
from source code by a single click.

<url url="http://poedit.sf.net" name="http://poedit.sf.net">

<sect2>Emacs po-mode
<p>
<url url="http://www.emacs.org" name="http://www.emacs.org">

<sect1>Help translations
<p>
The help files should have been written in English using good grammar in the
hopes that it would help out people translating. They are divided into
functional areas. Each .hlp file represents a different functional block of how
the program looks to the user.

Hopefully as SquirrelMail is more widely used, non-English translations will be
used to make other non-English translations. You might want to keep this in mind
when writing yours. Remember that these will be used all over the world and in
many different environments so local language dialects might confuse someone
else.

<sect2>File Structure:
<p>
All translated files should be placed under the help directory. Under the help
directory create another directory. This directory MUST be named to the two
letter standard abbreviation for the language. English is "en" and Polish would
be "pl" for example.

The help files are written in a basic xml format. Don't worry, XML isn't hard at
all. All it does is contain values inside tags like &lt;start&gt; and
&lt;/start&gt;. For these help files, the tags must be on their own line like
this:

<tscreen><verb>
&lt;tag&gt;
Value for this tag
&lt;/tag&gt;
</verb></tscreen>

There are two types of main tags: &lt;chapter&gt; and &lt;section&gt;. There can
be only one &lt;chapter&gt; tag in a .hlp file. However, there can be many
&lt;section&gt; tags. Inside both of these tags, their can be any combination of
any of the following tags: &lt;title&gt;, &lt;description&gt;,
&lt;summary&gt;. Here is an example:

<tscreen><verb>
 &lt;chapter&gt;
 &lt;title&gt;
 My first chapter
 &lt;/title&gt;
 &lt;summary&gt;
 Just a brief summary
 &lt;/summary&gt;
 &lt;description&gt;
 This is a more detailed description that can span many
 lines. Usually, this is the bulk of the help section
 or chapter description.
 &lt;/description&gt;
</verb></tscreen>

The title can only be one line long. The summary can be many lines, but it
should be very short. The description can be very long. It is the main part of
the help section.

<sect2>Translating:
<p>
To translate, just copy all the .hlp files from help/en into your new directory
that you created for this language (i.e. help/pl). You only need to translate
what is in between the tags. Do not translate the actual tags such as
&lt;chapter&gt; or &lt;summary&gt;. The tag names need to remain in English. You
should only translate the text between tags.

Often there may be other HTML tags such as &lt;b&gt; for bold or &lt;a
href...&gt; to make a link. If you see any of these tags, just leave them and
don't translate them either. Only translate what is contained inside them if
needed.

<sect1>Statistics
<p>
Statistics for the translations, but the help files, can be found at the <url
url="http://l10n-stats.squirrelmail.org/" name="SquirrelMail i18n statistics">
page.

<sect>Managing translations
<sect1>Creating translations
<p>
You must have gettext installed. If it is not installed you can 
download the sources from <url url="ftp://ftp.gnu.org/pub/gnu/gettext/" 
name="ftp://ftp.gnu.org/pub/gnu/gettext/">

Find the language code for the language you are going to translate 
into. A list of language codes can be found at 
<url url="http://lcweb.loc.gov/standards/iso639-2/langhome.html"
name="http://lcweb.loc.gov/standards/iso639-2/langhome.html">

If there is a 2 letter code for the language, use this.

You may also need country code, that can be found at
<url url="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html"
name="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html">

<sect2>Getting the template:
<p>
Create a directory <tt>squirrelmail/locale/language_code/LC_MESSAGES/.</tt> 
Copy <tt>squirrelmail/po/squirrelmail.pot</tt> into this directory and rename it
to squirrelmail.po. This is the file that is going to be translated.

<sect2>Doing the actual translation:
<p>
Translate strings

Convert the translated squirrelmail.po into a binary file by running the 
command <tt>"msgfmt -o squirrelmail.mo squirrelmail.po"</tt> in the directory 
where the translated <tt>squirrelmail.po</tt> is residing. 

Add "-c" option to msgfmt command if you want to be sure that your 
translation is correct.

<sect2>Making new translation available
<p>
Add the language name and language code to the array at the top of 
squirrelmail/functions/i18n.php.

Since SquirrelMail 1.5.1 new translations are enabled by creating
file named setup.php in locale/&lt;translation_code&gt; directory.
This file should contain $languages array entries and XTRA_CODE 
functions used by translation.

For example (locale/tlh/setup.php file):
<code>
&lt;?php
$languages['tlh']['NAME']='Klingon';
$languages['tlh']['ALTNAME']='tlhIngan Hol';
$languages['tlh']['CHARSET']='utf-8';
?&gt;
</code>

<sect2>Example (step by step)
<p>
How do I do it.

<sect2>Submission
<p>
Send the language to the mailing list for inclusion with the official 
SquirrelMail package.

<sect2>Helper scripts
<p>
There is also a small script in the po/ directory that can help in 
creating charset mappings from the mappings files that are provided 
by the Unicode consortium.


<sect>Common problems
<sect1>Translations are not working
<p>
If you have gettext support in PHP, translations will work only if you
have the appropriate system locale. You should also restart your web
server after installing new locale packs.

<sect1>Some words are not translated
<p>
This is the way gettext translations work. If a translated string is not
available, the English version of the string is used.

Possible causes are:
<itemize>
 <item>The locale that you are using is not fully translated.
 <item>The incorrect (untranslated) strings belong to non-core SquirrelMail plugins whose translations may not be in your locale pack, or the plugin may be broken or otherwise untranslated.
</itemize>

<sect1>"xxx character set is not supported"
<p>
"xxx character set is not supported" errors may appear when you switch to some
translations. This usually means that your IMAP server does not support the
charset that is used by that translation.

This error can be disabled by setting following SquirrelMail options to false:
<itemize>
 <item>4. General Options -> 11. Allow server thread sort (it is not enabled by
 default)
 <item>4. General Options -> 12. Allow server-side sorting (not enabled by
 default)
 <item>4. General Options -> 13. Allow server charset search (enabled by
 default)
</itemize>

There is one exception: if you are using the Turkish translation, you can get
similar errors even when your IMAP server supports the ISO-8859-9 charset.
This happens due to different small letter to capital letter conversion rules
in Turkish. See <url
url="https://sourceforge.net/tracker/?func=detail&amp;aid=690625&amp;group_id=311&amp;atid=100311" 
name="SM bug No.690625">, <url url="http://www.topolis.lt/php/"
name="http://www.topolis.lt/php/">,
<url url="http://www.topolis.lt/php/patched-utf8.txt"
name="http://www.topolis.lt/php/patched-utf8.txt"> and
<url url="http://www.topolis.lt/php/turkish.phps"
name="http://www.topolis.lt/php/turkish.phps"> for more details.

<sect1>"Invalid range end in /usr/share/squirrelmail/functions/i18n.php"
<p>
If you are using SquirrelMail on Linux RedHat v7.3 system, sometimes you can
get an error similar to:

Warning: Invalid range end in /usr/share/squirrelmail/functions/i18n.php on line
xx 

This problem can be reproduced only on RedHat 7.3 or RedHat Advanced Server 2.0.
It happens only if a UTF-8 enabled glibc locale is used. This means that the
ca_ES, cs_CZ, da_DK, en_CA, es_ES, es_US, et_EE, fi_FI, hr_HR, is_IS, lt_LT,
lv_LV, no_NO, pl_PL and sl_SI locales are all affected. Emails that produce
this kind of warning will do so because they use an encoding other than the
one that is set in the user's locale.

The problem is in a broken glibc, Apache or PHP patch or patches used by
RedHat. The system doesn't like regexp ranges between \237-\240 (octal
numbers; decimal 159-160). Recent SquirrelMail versions try to avoid this
error.

<sect1>Latin letters show instead of the ones that are used by some translation.
<p>
FreeBSD requires the full locale name.

<sect1>Special folders (Sent/Drafts/Trash) are not translated
<p>
This is intentional. Those folders may be special in content, but not in
name - they could be named anything, which is why SquirrelMail cannot
pretend to know what they will be named. In some cases, users could already
have folders with the desired translated name, which would cause confusion. 

You can take some steps to provide translated special folder names for your
users, but be careful about imposing translated folder names as the
administrator rather than letting users manage their folders themselves.

<itemize>
 <item>The administrator can set what folders to use (for all users - by default) for Trash, Drafts and Sent (you might want to ensure you have a script on the mail server that creates pre-translated folders for this purpose first) by using the SquirrelMail configuration script (config/conf.pl, which is usually aliased to "configure" in the main SquirrelMail directory) and choosing "3. Folder Defaults" and then entering the utf7-imap encoded folder names for "3. Trash Folder", "4. Sent Folder" and "5. Drafts Folder". You can also do the same by directly editing config/config.php and changing the values for $trash_folder, $sent_folder and $draft_folder.
 <item>Users can go to Options->Folder Preferences and select what folders to use for Trash, Drafts and Sent (they can create their own pre-translated folders for this purpose on the Folders page first). These settings will override the administrative settings described in the item above.
 <item>As of SquirrelMail 1.5.2, users can go to Options->Folder Preferences and enable "Translate Special Folders", and SquirrelMail will try to automatically translate folders named "Trash", Sent" and "Drafts", but, as mentioned above, this can result in unexpected or confusing results if the user has already created similarly-named folders.
 <item>The administrator can choose to set default values for (or force the values of) the prior two user settings by using one of the methods explained <url url="http://www.squirrelmail.org/docs/admin/admin-5.html#ss5.6" name="in the Administrator's Manual">
</itemize>

<sect>OS Specific problems
<sect1>GNU/Debian
<p>
Debian does not enable any system locales by default. You must enable
appropriate locales in <tt>dpkg-reconfigure locales</tt>. Gettext 
translations don't work on glibc systems when system locale is not 
available.

<sect1>Solaris with Sun gettext libraries
<p>
Sun gettext libraries use locale name set in successful php setlocale() 
function call. SquirrelMail 1.4.3a and later versions use locale
name with charset information and stores locales in directories without 
charset information. You must rename directories and include charset 
information in it or create symbolic links with charset information or
disable all $languages[xx_XX]['LOCALE'] code in functions/i18n.php or
recompile php to use GNU Gettext libraries.

<sect1>Solaris with GNU gettext libraries
<p>
You must set language environment variables in order to use translations.
SquirrelMail does not set them when php is running is safe mode.

<sect1>OpenBSD
<p>
You must set language environment variables in order to use translations.
SquirrelMail does not set them when php is running is safe mode.


</article>
