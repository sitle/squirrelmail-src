<!doctype linuxdoc system>
<!--
 $Id$

 Copyright (c) 2005-2006 The SquirrelMail Project Team
 This file is part of SquirrelMail webmail interface documentation.

 SquirrelMail is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 SquirrelMail is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with SquirrelMail; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 02110-1301, USA
-->
<article>

<title>SquirrelMail Administrator's Manual
<author>
by the SquirrelMail Project Team:
<!-- put your name here -->
</author>
<date>$Date$
<abstract>
This document provides information about SquirrelMail webmail interface
installation and configuration procedures.
</abstract>

<toc>

<p>
Document version: $Revision$

<sect>SquirrelMail overview
<p>
SquirrelMail is a standards-based webmail package written in PHP. It includes
built-in pure PHP support for the IMAP and SMTP protocols, and all pages render
in pure HTML 4.0 (with no JavaScript required) for maximum compatibility across
browsers. It has few requirements and is easy to configure and
install. SquirrelMail has all the functionality you would want from an email
client, including strong MIME support, address books, and folder manipulation.

<p>
This manual supports SquirrelMail 1.4.0 and up. The 1.2.x series has been
obsoleted, and is only referenced in the upgrading notes of this manual.

<sect1>SquirrelMail Requirements
<sect2>Requirements for running SquirrelMail:
<p>
<itemize>
  <item>UNIX/Linux or Windows
  <item>An IMAP server which supports IMAP 4 rev 1.
  <item>Web server with PHP installed (for example <url
        url="http://httpd.apache.org/" name="Apache httpd">)
  <item>You need at least PHP 4.1.2. If you are using PHP 4.1.2 or 4.1.4,
        please upgrade to the latest version ( >= 4.1.2.11, >= 4.1.4.1 final).
  <item>Perl installed on the system. (If you don't have Perl, SquirrelMail will
        work fine but it's very helpful for the initial configuration.
        Alternatively, you can manually edit the configuration files.)
</itemize>

<sect2>Optional:
<p>

<itemize>
  <item>Unlike many PHP applications, SquirrelMail does <em>not require</em>
        MySQL or another database type.
  <item>If you use MySQL for the address book or for preferences, note that the Pear
        DB library is required to be installed and available in the include path.
  <item>Aspell or ispell installed if using the SquirrelSpell plugin, For
        UNIX/Linux see: <url url="http://aspell.sourceforge.net/"
        name="http://aspell.sourceforge.net/"> or for Windows, see: <url
        url="http://aspell.net/win32/" name="http://aspell.net/win32/">
  <item>Japanese language support: PHP must be compiled with the
        <tt/--enable-mbstring/ option for SquirrelMail to read and write Japanese
        emails. Each user must also set their language option to Japanese.
  <item>PHP mbstring extension is required for translations that use multibyte
        or not ISO-8859-1 character sets. Without mbstring extension interface will
        remain usable, but some i18n features and fixes won't be enabled.
  <item>PHP XML extension is required, if digest-md5 authentication is used.
</itemize>

<sect2>Preferred configuration:
<p>
<itemize>
  <item>PHP with gettext and mbstring support. Without gettext you lose in
    performance. mbstring is actually required if you want a good internationalised
    webmail system.
  <item>An IMAP server that supports sort and thread IMAP extensions. Without
        these extensions you lose in performance.
  <item>The IMAP server should support Unicode. Courier IMAP must be compiled
        with <tt/--enable-unicode/ option. Without it some translations might be
        unable to use sorting and threading.
</itemize>

<sect2>Client Requirements:
<p>
<itemize>
  <item>Cookies must be enabled in your browser.
  <item>15" display with 1024x768 or higher resolution. It might be hard to use
  interface on smaller displays and some customizations are required to make it
  usable.
</itemize>

<sect>Quick Start Guide
<p>
SquirrelMail can be downloaded from the SquirrelMail website or provided by your OS
packager. It is configured with the conf.pl utility, that is stored in
the <tt/config/ directory. You must configure SquirrelMail before using it.
SquirrelMail can be used by accessing it in web browser just like any other files
and scripts stored on your web server.

If you want to install SquirrelMail, check the chapters about SquirrelMail
installation.

<sect1>Directory layout
<p>
SquirrelMail files are split into subdirectories according to file type and
provided functions.

<tscreen><verb>
squirrelmail/
  class/
  config/
  contrib/
  data/
  doc/
  functions/
    decode/
    encode/
  help/
  images/
  locale/
  plugins/
  po/
  src/
  templates/
  themes/
    css/
</verb></tscreen>

<tt/class/ directory stores various classes used with mime messages, email
delivery, localizations and other interface functions.

<tt/config/ directory stores SquirrelMail configuration files and configuration
utility. <tt/conf.pl/ script is a perl based utility used to manage SquirrelMail
configuration. The <tt/config_default.php/ file stores default configuration
values. The <tt/config.php/ file stores current configuration. The file 
<tt/config_local.php/ can store local site configuration overrides and
configuration options that are not supported by configuration utility.
<tt/default_pref/ stores <ref
id="default_pref" name="default user preferences"> that are used when a new
user logs in for the first time. <tt/default_pref/ file was stored in the
<tt/data/ directory before SquirrelMail 1.5.1.

The <tt/contrib/ directory stores files that provide extra features to SquirrelMail
package, but are not used directly in the webmail interface.

The <tt/data/ directory is default location for SquirrelMail users' preference
files. You should move that directory outside of web tree or make sure that it
can't be accessed by external users. This directory is not packaged anymore
since SquirrelMail 1.5.1.

The <tt/doc/ directory stores some documentation about SquirrelMail.

<tt/functions/ directory stores SquirrelMail function files. The <tt/decode/
subdirectory stores charset decoding functions that are used to read emails
encoded in different charsets. The <tt/encode/ directory stores charset encoding
functions that are used to convert emails to charset used in interface when
user replies or forwards email written in different charset.

Under <tt/help/ are SquirrelMail help files. Information from these files
is displayed when a user clicks on Help link in SquirrelMail menu line. Help files
use XML formating. They can be translated into different languages.

The <tt/images/ directory stores various image files that can be used in interface.

The <tt/locale/ directory stores SquirrelMail translations. A user can select
their preferred translation in SquirrelMail Display Options.

The <tt/plugins/ directory stores plugins that can be used to extend 
SquirrelMail functionality. Activation of plugins is controlled 
through the SquirrelMail configuration utility. Some plugins might 
also use their own configuration files or functions provided by other 
plugins. See README and INSTALL files in each plugin's directory.

The <tt/po/ directory stores scripts that are used to work with SquirrelMail
translation files. <tt/xgetpo/ script extracts translatable strings from
SquirrelMail script. <tt/mergepo/ script combines default strings with selected
translation. <tt/compilepo/ script compiles selected translation. These scripts
are usually used only by SquirrelMail translators.

The <tt/src/ directory stores scripts that are used when user accesses the
webmail interface.

The <tt/templates/ directory stores template files that can be used in
SquirrelMail 1.5.1 and later versions.

The <tt/themes/ directory stores SquirrelMail <ref id="themes"
name="colour themes">, and the <tt/css/ subdirectory stores style
sheet files available to end user.

<sect1>User data storage
<p>
SquirrelMail stores users' preferences and address books in simple text
files. The location of these files is set with the data directory setting
in the SquirrelMail configuration. SquirrelMail can also use a <ref id="db-backend"
name="database"> or some other storage facility (if the required backend
is provided by a plugin) for managing user preferences.

Users' preferences are stored in <tt/.pref/ files. Address books are stored in
<tt/.abook/ files. <tt/.sig/ and <tt/.si&lt;somenumber&gt;/ files store users'
signatures. Some plugins might use other files to store users' data.

When the number of files in the data directory becomes somewhat large, directory 
access time can be affected. In such cases, the administrator can split 
preference files into subdirectories by enabling directory hashing in 
the SquirrelMail configuration.

<sect1>Configuration utility
<p>
SquirrelMail can be configured with <tt/conf.pl/, a Perl script that is stored in
the <tt>config/</tt> directory. You can start it by running the <tt>configure</tt>
script in the SquirrelMail base directory or by running the <tt>conf.pl</tt> script in
the <tt>config</tt> directory.

<tscreen><verb>
# cd /path/to/squirrelmail
# cd config
# ./conf.pl
</verb></tscreen>

This configuration utility provides menu based configuration options:
<tscreen><verb>
SquirrelMail Configuration : Read: config_default.php (1.4.0)
---------------------------------------------------------
Main Menu --
1.  Organization Preferences
2.  Server Settings
3.  Folder Defaults
4.  General Options
5.  Themes
6.  Address Books
7.  Message of the Day (MOTD)
8.  Plugins
9.  Database
10. Languages

D.  Set pre-defined settings for specific IMAP servers

C   Turn color on
S   Save data
Q   Quit

Command >>
</verb></tscreen>

Menu is controlled by entering numbers or letters that are listed on the left
side.

<sect1>Address book format
<p>
SquirrelMail stores address books in CSV format. <tt/|/ symbol is used as field
delimiter. Address books can also be stored in <ref id="db-backend"
name="database"> or other other storage facility, if required functions are
provided by plugin. SquirrelMail can lookup addresses from LDAP directories, if
directories are configured in SquirrelMail configuration and PHP installation
contains LDAP support.

Address book file contains five fields. First field stores nicknames, short
names, that are used to identify address book entries. Second field stores
names. Third field stores surnames. Forth field stores email addresses. Fifth
field stores additional information.

Additional address book fields and functions can be provided by experimental
vcard address book format and some address book plugins. You can find list of
address book plugins on SquirrelMail site.

<sect>Installing SquirrelMail
<sect1>Quick and Dirty install
<p>
In order to use SquirrelMail, you should take the following steps.

<sect2>Download all required software
<p>
You can find SquirrelMail package on <url url="http://www.squirrelmail.org"
name="SquirrelMail site">. PHP can be found on <url url="http://www.php.net"
name="PHP site">.

<sect2>Install webserver and PHP (at least 4.1.0).
<p>
SquirrelMail needs a webserver with PHP support. Check <url
url="http://www.php.net/manual/en/install.php" name="PHP install manual"> for
information about supported web servers and install procedures.

Some Linux and Unix distributions provide precompiled web server and php packages.

We recommend the following PHP settings:

<itemize>
    <item><tt/register_globals/ off - a dangerous setting, not needed. We do
        not release security advisories for issues only exploitable with this
        setting on. Note that you can easily enable it only for some legacy
        site that may need it and turn it off globally.
    <item><tt/magic_quotes_{runtime,gpc,sybase}/ off - SquirrelMail may work
        with any of these on, but if you experience stray backslashes in your
        mail or other strange behaviour, it may be advisable to turn them off.
    <item><tt/file_uploads/ on - needed if your users want to attach files to
        their mails.
    <item><tt/safe_mode/ on or off - safe_mode on is only a tiny bint more secure,
    	in the SquirrelMail case. There may be some incompatibilities with
	some functionality.
</itemize>

<sect2>Install IMAP server
<p>
It depends on used email system. Email server needs IMAP service that knows
used email system layout. If you use Unix with standard sendmail server, you
might have to install UW IMAP, Dovecot or other IMAP server, that can use email
stored in /var/spool/mail/ directory. If you use Windows, you might have to
enable IMAP service that is bundled with your email server. If your email server
does not support IMAP, you might have to find some other email server product.

<sect2>Unpack SquirrelMail package
<p>
Unpack the SquirrelMail package in a web-accessible location.

<sect2>Prepare data and attachment directories
<p>
Select a data-dir and attachment dir, outside the webtree (e.g. in /var).
The data-dir (for user prefs) should be owned by the user the webserver
runs as (e.g. www-data). The attachment dir (for uploading files as
attachments) should be file mode 0730 and in the same group as the
webserver.

If you use PHP with safe mode enabled, check chapter about safe mode.

<sect2>Configure SquirrelMail
<p>
Run <tt>config/conf.pl</tt> from the command line. Use the D option to load
predefined options for specific IMAP servers, and edit at least the
Server Settings and General Options (datadir).

<sect2>Check your SquirrelMail configuration
<p>
Browse to http://www.example.com/yourwebmaillocation/src/configtest.php
to test your configuration for common errors.

<sect2>Log into SquirrelMail
<p>
Browse to http://www.example.com/yourwebmaillocation/ to log in.


<sect1>Installing SquirrelMail on Unix and Linux systems
<p>
This chapter covers installation of SquirrelMail on generic Unix or Linux
system. It does not cover installation of operating system or tools required to
install web server or PHP.

Any version numbers used in examples are specific to the time when this
documentation is written. If current version numbers differ, make sure that you
are not using old, obsolete or vulnerable software.

Guide uses UW IMAP server as example. This IMAP server can be used in generic
email setup when incoming mail is stored in <tt>/var/spool/mail</tt>
directory. If you are planning to use webmail with big number of users or with
bigger mailboxes, consider using different IMAP server and redesign entire email
system.

<sect2>Download required software
<p>
You will need:
<itemize>
  <item>Apache - <url url="http://httpd.apache.org/download.cgi"
  name="http://httpd.apache.org/download.cgi">
  <item>PHP - <url url="http://www.php.net/downloads.php"
  name="http://www.php.net/downloads.php">
  <item>UW IMAP - <url url="http://www.washington.edu/imap/"
  name="http://www.washington.edu/imap/">
  <item>SquirrelMail - <url url="http://www.squirrelmail.org/download.php"
  name="http://www.squirrelmail.org/download.php">
</itemize>

<tscreen><verb>
# install -d /usr/local/src/downloads
# cd /usr/local/src/downloads
# wget http://some-apache-mirror-server/apache/httpd/httpd-2.0.54.tar.gz
# wget http://some-php-mirror-server/get/php-4.3.11.tar.bz2/from/this/mirror
# wget ftp://ftp.cac.washington.edu/mail/imap.tar.Z
# wget http://some-sourceforge-mirror/some-path/squirrelmail-1.4.5.tar.bz2
</verb></tscreen>

<sect2>Unpack and install apache
<p>
<tscreen><verb>
# cd /usr/local/src
# tar -xzvf /usr/local/src/downloads/httpd-2.0.54.tar.gz
# cd httpd-2.0.54
# ./configure --prefix=/usr/local/apache --enable-module=so
# make
# make install
</verb></tscreen>

<sect2>Unpack and install php
<p>
<tscreen><verb>
# cd /usr/local/src
# tar --bzip2 -xvf /usr/local/src/downloads/php-4.3.11.tar.bz2
# cd php-4.3.11
# ./configure --prefix=/usr/local/php \
> --with-apxs2=/usr/local/apache/bin/apxs
# make
# make install
</verb></tscreen>

If you configure PHP compilation with <tt/--disable-all/ option, you must add
<tt/--enable-session/ and  <tt/--with-pcre-regex/ options.

<sect2>Add PHP support to apache
<p>
<tscreen><verb>
&lt;IfModule mod_php4.c&gt;
  AddType application/x-httpd-php .php
&lt;/IfModule&gt;
</verb></tscreen>

<sect2>Restart apache and check if php is working
<p>
<tscreen><verb>
/usr/local/apache/bin/apachectl graceful
</verb></tscreen>

<tscreen><verb>
&lt;?php phpinfo(); ?&gt;
</verb></tscreen>

<sect2>Unpack and install imap server
<p>
Unpack UW IMAP archive.
<tscreen><verb>
# cd /usr/local/src
# tar -xzvf /usr/local/src/downloads/imap.tar.Z
</verb></tscreen>

Compile UW IMAP
<tscreen><verb>
cd /usr/local/src/imap-&lt;someversion&gt;
make port-name EXTRADRIVERS='' SSLTYPE=unix
</verb></tscreen>

Replace <tt>port-name</tt> with name that matches your system. Check Makefile
for possible values. If you haven't installed OpenSSL libraries and headers, use
<tt>SSLTYPE=none</tt> instead of <tt>SSLTYPE=unix</tt>.

Install IMAP server binary
<tscreen><verb>
strip imapd/imapd
install -d /usr/local/libexec/
cp imapd/imapd /usr/local/libexec/
</verb></tscreen>

Enable IMAP server in inetd.conf
<tscreen><verb>
imap2 stream tcp nowait root /usr/sbin/tcpd /usr/local/libexec/imapd
</verb></tscreen>

Restart inetd

<sect2>Prepare SquirrelMail directories
<p>
<tscreen><verb>
# mkdir /usr/local/squirrelmail
# cd /usr/local/squirrelmail
# mkdir data temp
# chgrp nogroup data temp
# chmod 0730 data temp
</verb></tscreen>

<sect2>Unpack SquirrelMail
<p>
<tscreen><verb>
# cd /usr/local/squirrelmail
# tar --bzip2 -xvf /usr/local/src/downloads/squirrelmail-1.4.5.tar.bz2
# mv squirrelmail-1.4.5 www
</verb></tscreen>

<sect2>Configure SquirrelMail
<p>
Start SquirrelMail configuration utility. Configure SquirrelMail with UW
preset. Set data and attachment directories.

<sect2>Configure access to SquirrelMail in Apache
<p>
Modify httpd.conf

<tscreen><verb>
Alias /squirrelmail /usr/local/squirrelmail/www
&lt;Directory /usr/local/squirrelmail/www&gt;
  Options Indexes
  AllowOverride none
  DirectoryIndex index.php
  Order allow,deny
  allow from all
&lt;/Directory&gt;
</verb></tscreen>

<sect2>Log into SquirrelMail
<p>
After you add alias to SquirrelMail in apache configuration and restart apache,
you should be able to access SquirrelMail by going to
<tt>http://your-server/squirrelmail</tt>.

<sect1>Installing SquirrelMail on Windows systems with Apache webserver
<p>
SquirrelMailInstallWin32Apache

<sect1>Installing SquirrelMail on Windows systems with IIS webserver
<p>
SquirrelMailInstallIIS

<sect1>Installing SquirrelMail on MaxOS X systems
<p>
MacInfoHere

<sect1>Prepackaged SquirrelMail installs
<p>
If your operating system distribution provides prepackaged SquirrelMail, it
might be a good idea to use that. The drawback is that you probably don't have
the latest and greatest version. But on the plus side: the whole installation
step is managed for you, it integrates better with the rest of your system
and you're provided with security updates automatically.

<p>
SquirrelMail provides RPM packages. There are two packaging flavors. Standard
package that can be used on RedHat 8.x or later. 7.x.noarch.rpm package is
designed for RedHat 7.x systems. Main difference between packages - standard
package contains standard Apache configuration file with /webmail/ alias in
<tt>/etc/httpd/conf.d</tt> and different package dependencies. There are other
SquirrelMail packages created by RedHat, Fedora, SuSE and other RPM
distributions.

Debian packages can be downloaded from <url
url="http://packages.debian.org/squirrelmail" name="the Debian website"> or you can
install them with your favorite Debian package manager. For example: <tt>apt-get
install squirrelmail</tt>. If you use Debian stable and SquirrelMail package is
a little bit outdated, you might be able to install newer SquirrelMail package
from testing or unstable. This is not guaranteed to work though.

FreeBSD includes two different SquirrelMail packages in their ports collection.

<sect>Upgrading SquirrelMail
<p>
This chapter talks about upgrading an existing SquirrelMail install.

<sect1>Backup old install
<p>
Make a backup of your current SquirrelMail directory. If you use "cp", be
sure to use the "-Rp" options. -R means recursive, and -p will save the
permissions in the directory.

In this example, we assume that your httpd document directory is
<tt>/home/httpd/html</tt>, that your SquirrelMail install is located at
<tt>/home/httpd/html/squirrelmail-1.0.6</tt>, and that your new SquirrelMail
version is 1.2.0. Substitute version numbers and names as required.

<verb>
$ cd /home/httpd/html
$ cp -Rp squirrelmail-1.0.6 squirrelmail-1.0.6.bak
</verb>

<sect1>Unpack new SquirrelMail
<p>
Make sure that you are in your httpd document directory (<tt>/home/httpd/html</tt>)
and then unpack the SquirrelMail archive (whatever the filename is):
<verb>
$ tar -zxvf squirrelmail-1.2.0.tar.gz
</verb>

<sect1>Copy important files from old install
<p>
The important files to copy are:
<itemize>
  <item>Preferences
  <item>Config details
  <item>Plugins
  <item>Themes (if you've edited or added any of them)
</itemize>

<sect2>Preferences
<p>
First, copy your preference data over to the new directory. Usually
this is ok, but if you are upgrading from anything less than 1.0.5, we
strongly suggest you let your users reset their preferences. There
were important security upgrades in 1.0.5 regarding preference files.
<verb>
$ cp squirrelmail-1.0.6.bak/data/* squirrelmail-1.2.0/data
</verb>

<sect2>Config details
<p>
If at all possible, start the configuration process from scratch. It is
much less prone to missing configuration options than copying your old
configuration. Ideally, you should just run conf.pl to reconfigure
SquirrelMail. If you decide to copy your old config.php over, we strongly
recommend that you run conf.pl to make sure things are correct and then save
the config file.
<verb>
$ cp squirrelmail-1.0.6.bak/config/config.php squirrelmail-1.2.0/config
</verb>

<sect2>Copy plugins
<p>
Like SquirrelMail, plugins are frequently updated for improvements, as well
as to make them compatible with new SquirrelMail releases. It is suggested
that you download new versions of your plugins at the same time you download
your SquirrelMail install, and that you install your plugins fresh (it's
easy, don't panic!).

You should not try replacing plugins that are already included in the SquirrelMail
package. Download latest versions of plugins that are not included in the new
SquirrelMail package or copy them from your older SquirrelMail install.

<sect2>Copy themes
<p>
TODO: this changes in 1.5.2

If you've created or modified themes, you should copy just those to the new
SquirrelMail themes directory. To just copy them all over to the new
SquirrelMail installation, you can run one command.
<verb>
$ cp -ui squirrelmail-1.0.6.bak/themes/* squirrelmail-1.2.0/themes/
</verb>

When <tt/-u/ flag is used, command copies only missing and newer files.
When <tt/-i/ flag is used, command will ask for confirmation before replacing
existing files.

If you want to see your theme in future SquirrelMail packages, send it to
SquirrelMail developers. They might add it to the themes in the standard
install!

<sect1>Change permissions
<p>
The web server must have write permission to the data directory. In this
example, we assume that user "nobody" and group "nobody" are the web server
as is often the case with Apache.
<verb>
  $ cd squirrelmail-1.2.0
  $ chown -R nobody:nobody data
</verb>

Check your webserver's configuration file. It might be using different
userid/groupid pair. Additionally, if "chown user:group" doesn't work, you can
use "chown user" and "chgrp group" instead. See the man pages for these commands
for more information.

If you are using SquirrelMail in setup with PHP safe_mode restrictions, data and
attachment directories should be owned by same user that owns other SquirrelMail
scripts. It must be writable by webserver group. Check <url
url="http://www.php.net/features.safe-mode" name="PHP Safe mode manual"> for
more details.

<sect1>Run conf.pl
<p>
Run config/conf.pl to see the new configuration options available with the
new version, as well as to verify that all of your old options are set
properly.

Always save your options, also if you haven't changed anything.
This will ensure that any problems with conf.pl that might have been solved
are effective to your installation.

If you want to make sure that your configuration contains all themes included in
new SquirrelMail package, go to theme options in configuration utility and
run theme detection command.

<sect1>Version specific notes
<sect2>Upgrade from version older than 1.2.2 to later version.
<p>
In order to provide better internationalization support, developers have changed
names used by translations. From 1.2.2 SquirrelMail uses language and country
codes in translation names. In most of cases upgraded SquirrelMail should work
correctly. Only Norwegian Nynorsk (no_NO_ny) translation might need fixes. If
your user preference files contain <tt/language=no_NO_ny/ lines, these lines
should be updated to <tt/language=nn_NO/.

<sect2>Upgrade from 1.2.x or older versions to 1.4.x or later.
<p>
Layout changes. Plugins can break.

<sect2>Upgrade from version older than 1.4.4 to later version.
<p>
Translations are removed in order to reduce package size. You must download
and install separate translation packages.

<sect2>Downgrade from 1.5.1 to older version.
<p>
Index Order options are not preserved.

SquirrelSpell user dictionaries are not preserved.

<sect1>Recheck new install
<p>
Login into new SquirrelMail install and check if everything is working.

<sect1>Replace old install.
<p>
Redirect your users to new SquirrelMail install. You can use Apache <url
url="http://httpd.apache.org/docs/mod/mod_alias.html#redirectperm"
name="RedirectPermanent"> directive or other redirection tools provided by your
webserver.

If you use SquirrelMail directory without version information, you can also
replace it with new SquirrelMail directory.
<verb>
$ mv /home/httpd/html/squirrelmail /home/httpd/html/squirrelmail.old
$ mv /home/httpd/html/squirrelmail.new /home/httpd/html/squirrelmail
</verb>

<sect1>DONE!
<p>
That should be all! The most important part is copying your users'
preference files back into the new data directory. This will insure that
your users will have their old preferences. Remember to do so with caution,
especially if you are upgrading from a version before 1.0.5 to version 1.0.5
or later.

<sect>Configuring SquirrelMail
<p>
SquirrelMail stores interface configuration in <tt>config/config.php</tt>
file. This file can be controlled with SquirrelMail configuration utility
<tt>config/conf.pl</tt>. Default configuration values are stored and
documented in <tt>config/config_default.php</tt> file.

<sect1>Basic configuration
<p>
In order to use SquirrelMail you must create a configuration file. Default
configuration should adjusted to match your setup. Main things that should be
checked are:
<itemize>
  <item>Default domain (2. Server settings &gt; 1. Domain)
  <item>Addresses of IMAP and SMTP servers.
  <item>Type of IMAP server. See next chapter about <ref id="select-imap"
  name="selecting IMAP server">.
</itemize>

You might want to change:
<itemize>
  <item>Organization Preferences (1. Organization Preferences)
</itemize>

<sect1>Selecting IMAP server<label id="select-imap">
<p>
Some IMAP servers use specific IMAP folder layout or need some tweaks in IMAP
client's configuration. In order to set SquirrelMail according to your server's
requirements you might have to set more than 10 different SquirrelMail
options. SquirrelMail simplifies modification of these settings by providing
special configuration command. If you select D command in SquirrelMail
configuration utility, you will be asked to select your IMAP server and all
settings will be adjusted according to selected IMAP server.

For example, correct combination of SquirrelMail settings can hide INBOX prefix
in courier IMAP server. Value that is set in IMAP <tt/"Server software"/
configuration option can fix search issues in EIMS or hmailServer, provide
workarounds for some folder subscription errors in mercury32 IMAP server, but it
does not affect system folder names, folder prefix, delimiter and other specific
configuration options.

SquirrelMail provides configuration presets for Cyrus, UW, Courier, Exchange,
EIMS (Mac OS X), hmailServer, mercury32 and dovecot IMAP servers. See chapter
about <ref id="presets" name="Presets"> for more information about server
specific settings.

<sect1>Authentication
<p>
Next to plain text logins for IMAP and SMTP, SquirrelMail supports the
CRAM-MD5 and DIGEST-MD5 authentication mechanisms. It is possible
to use different methods for both IMAP and SMTP. Unless the administrator
changes the authentication methods, SquirrelMail will default to the "classic"
plain text methods.

<sect2>Requirements
<p>
<verb>
CRAM/DIGEST-MD5
* If you have the mhash extension to PHP, it will automatically
  be used, which may help performance on heavily loaded servers.
  ** NOTE: mhash is optional and no longer a requirement **  (SINCE WHEN?)
* PHP XML extension needed for digest-md5 authentication.
</verb>

<sect2>POP before SMTP
<p>
Some SMTP servers require POP3 authentication before accepting messages to
external recipients. SquirrelMail supports POP before SMTP. You can
enable it in SMTP server settings <tt/"POP before SMTP"/ option. SquirrelMail
uses same username and password that was used for IMAP authentication.

<sect2>Using different username for SMTP relaying
<p>
If SMTP server uses different username and password for authentication,
since 1.5.1 version SquirrelMail can use one username and password for entire
SquirrelMail installation. They can be set in <tt>config/config_local.php</tt>
<tt/$smtp_sitewide_user/ and <tt/$smtp_sitewide_pass/ configuration variables.

If you use older SquirrelMail version and want to use single user/password
for SMTP authentication, you might have to install local SMTP server and set it
as smart relay. See SMTP server's documentation about email relaying through
other SMTP server.

<sect1>StartTLS, IMAPS, SSMTP
<p>
SquirrelMail is able to connect to IMAP and SMTP servers that use TLS.
Since 1.5.1 version SquirrelMail is able to connect to IMAP and SMTP
servers that use STARTTLS (which is different from TLS).

<sect2>TLS requirements
<p>
<itemize>
  <item>PHP 4.3.0 or higher
  <item>The server you wish to use TLS on must have a dedicated port listening
  for TLS connections.
  <item>If you use PHP 4.3.x, OpenSSL support must be compiled staticly. See
  PHP bug <url url="http://bugs.php.net/bug.php?id=29934" name="#29934">.
</itemize>

<sect2>STARTTLS requirements
<p>
<itemize>
  <item>SquirrelMail 1.5.1 or higher
  <item>PHP 5.1.0 or higher with stream_socket_enable_crypto() function support.
  <item>IMAP or SMTP server with STARTTLS extension support.
</itemize>

TLS can be enabled in SquirrelMail configuration utility, <tt>"Server settings"</tt>
section. If you want to use IMAP with TLS, you should select command that
updates IMAP settings, enable TLS in <tt>"Secure IMAP (TLS)"</tt> option and set
secure IMAP port in <tt>"IMAP Port"</tt> option. Secure IMAP servers use tcp 993
port by default. If you want to use SMTP with TLS, you should select command
that updates SMTP settings, enable TLS in <tt>"Secure SMTP (TLS)"</tt> option and
set secure SMTP port in <tt>"SMTP Port"</tt> option. Secure SMTP servers use tcp 465
port by default.

STARTTLS extensions are enabled by selecting use of them in <tt>"Secure IMAP
(TLS)"</tt> or <tt>"Secure SMTP (TLS)"</tt> selection menu. These extensions
work by enabling encryption on plain text service ports. IMAP and SMTP ports
should be set to standard plain text IMAP and SMTP ports.

Note: There is no point in using TLS if your IMAP server is localhost. You need
root to sniff the loopback interface, and if you don't trust root, or an attacker
already has root, the game is over.  You've got a lot more to worry about beyond
having the loopback interface sniffed.

<sect1>Default user preferences<label id="default_pref">
<p>
If SquirrelMail is configured to use file-based preferences, default preferences are
stored in your data directory in a file called "default_pref". As you add
plugins to your SquirrelMail installation, you might want to configure some of
them on your own account and then propagate those settings to all of your
users. Or you may simply want to change the default theme, etc. This is what you
need to do to accomplish that.

<itemize>
  <item>Log into your own account and get all your configuration set to what
  you'd like the defaults to be.
  <item>Open your personal prefs file in your data directory (usually a file
  that looks something like "username.pref" or "user@domain.tld.pref", depending
  on what your usernames look like).
  <item>Find the relevant settings. Most plugin settings are identified by the
  plugin's name being the first thing on the line. Note that some plugins can
  have multiple setting lines. If you want to duplicate all of your settings,
  you can copy the entire file, but be careful that nothing with your name and
  email address or other personal items get copied.
  <item>Copy those settings into the "default_pref" file in the data directory.
</itemize>

Note that <tt/default_pref/ file works only for users that don't have an existing
preference file (i.e.: new users). If you want to add preferences to existing user
accounts, you should add them to their preference files. You can do that by editing
user .pref files or use the Forced Preferences plugin.

If you use database based setup, default settings are stored in
<tt>functions/db_prefs.php</tt> file, <tt/$default/ parameter in dbPrefs class.

<sect1>Using database backends<label id="db-backend">
<p>
On sites with many users you might want to store your user data in a
database instead of in files. This document describes how to configure
SquirrelMail to do this.

Methods for storing both personal address books and user preferences in
a database is included as a part of the distribution.

<sect2>Configuring PEAR DB
<p>
For this to work you must have the PEAR classes installed, these are part of
PHP. Once these are installed you must have sure the directory containing them is
a part of your PHP include_path. See the PHP documentation for information on
how to do that.

Under Mandrake Linux the PEAR classes are installed as part of the php-devel
package and under FreeBSD they are installed as part of the mod_php4 or php4
port/package. Debian packages pear libraries in php4-pear package.

<sect2>Configuring address books in database
<p>
First you need to create a database and a table to store the data in.
Create a database user with access to read and write in that table.

For MySQL you would normally do something like:

<tscreen><verb>
 (from the command line)
 # mysqladmin create squirrelmail

 (from the MySQL client)
 mysql> GRANT select,insert,update,delete ON squirrelmail.*
              TO squirreluser@localhost IDENTIFIED BY 'sqpassword';
</verb></tscreen>

The table structure should be similar to this (for MySQL):

<tscreen><verb>
CREATE TABLE address (
  owner varchar(128) DEFAULT '' NOT NULL,
  nickname varchar(16) DEFAULT '' NOT NULL,
  firstname varchar(128) DEFAULT '' NOT NULL,
  lastname varchar(128) DEFAULT '' NOT NULL,
  email varchar(128) DEFAULT '' NOT NULL,
  label varchar(255),
  PRIMARY KEY (owner,nickname),
  KEY firstname (firstname,lastname)
);
</verb></tscreen>

and similar to this for PostgreSQL:

<tscreen><verb>
CREATE TABLE "address" (
  "owner" varchar(128) NOT NULL,
  "nickname" varchar(16) NOT NULL,
  "firstname" varchar(128) NOT NULL,
  "lastname" varchar(128) NOT NULL,
  "email" varchar(128) NOT NULL,
  "label" varchar(255) NOT NULL,
  CONSTRAINT "address_pkey" PRIMARY KEY ("nickname", "owner")
);
CREATE  UNIQUE INDEX "address_firstname_key" ON "address"
  ("firstname", "lastname");
</verb></tscreen>

Next, edit your configuration so that the address book DSN (Data Source
Name) is specified, this can be done using either conf.pl or via the
administration plugin. The DSN should look something like:

<tscreen><verb>
 mysql://squirreluser:sqpassword@localhost/squirrelmail or
 pgsql://squirreluser:sqpassword@localhost/squirrelmail
</verb></tscreen>

See <url url="http://pear.php.net/manual/en/package.database.db.php"
name="PHP Pear DB manual"> for more details about DSN syntax.

When including a sensitive password in your DSN, please make sure
that you tighten the permissions on config.php accordingly, so
untrusted users can't read it.

Global address book uses same table format as the one used for personal
address book. You can even use same table, if you don't have user named
'global'.

<sect2>Configuring preferences in database
<p>
This is done in much the same way as it is for storing your address
books in a database.

The table structure should be similar to this (for MySQL):

<tscreen><verb>
  CREATE TABLE userprefs (
    user varchar(128) DEFAULT '' NOT NULL,
    prefkey varchar(64) DEFAULT '' NOT NULL,
    prefval BLOB DEFAULT '' NOT NULL,
    PRIMARY KEY (user,prefkey)
  );
</verb></tscreen>

and for PostgreSQL:

<tscreen><verb>
CREATE TABLE "userprefs" (
   "username" varchar(128) NOT NULL,
   "prefkey" varchar(64) NOT NULL,
   "prefval" text,
   CONSTRAINT "userprefs_pkey" PRIMARY KEY ("prefkey", "username")
);
</verb></tscreen>

Next, edit your configuration so that the preferences DSN (Data Source
Name) is specified, this can be done using either SquirrelMail configuration
utility or via the administration plugin. The DSN should look something like:

<tscreen><verb>
 mysql://squirreluser:sqpassword@localhost/squirrelmail or
 pgsql://squirreluser:sqpassword@localhost/squirrelmail
</verb></tscreen>

When including a sensitive password in your DSN, please make sure
that you tighten the permissions on config.php accordingly, so
untrusted users can't read it.

Once configuration settings are saved, users' personal preferences will be
stored in a database. Please note, however, that some SquirrelMail plugins 
are designed to use different files for users' data storage and won't be 
able to use database to store users' data.

<sect2>Primary keys
<p>
You <bf>must</bf> set primary keys correctly. If keys are not set correctly,
database entries might be duplicated when users change their preferences.

<sect2>Oversized field values
<p>
Database fields have size limits. Preference table example sets 128 
character limit to owner field, 64 character limit to preference key 
field and 64KB (database BLOB field size) limit to value field.

If interface tries to insert data without checking field limits, it
can cause data loss or database errors. Table information functions
provided by Pear DB libraries are not accurate and some database 
backends don't support them. Since 1.5.1 SquirrelMail provides
configuration options that set allowed field sizes.

If you see oversized field errors in your error logs - check your 
database structure. Issue can be solved by increasing database field 
sizes.

If you want to get more debugging information - check setKey() function 
in dbPrefs class. Class is stored in functions/db_prefs.php

<sect1>Using more than one IMAP server
<p>
SquirrelMail is designed to work with one IMAP server. If you want to use the same
SquirrelMail installation with multiple IMAP servers, you should be able to
implement this with Perdition mail proxy, or with the Vlogin or Multilogin plugins, 
or write your own custom server mapping function. These tools allow users to
be transparently redirected to their correct mail servers.

<sect2>Perdition proxy
<p>
<url url="http://www.vergenet.net/linux/perdition/" name="Perdition"> is POP and
IMAP proxy server, that can redirect users to appropriate mail servers.

<sect2>Vlogin plugin
<p>
Found in the main SquirrelMail plugins repository, this plugin helps manage 
and manipulate usernames given at login time, and allows the use of different 
SquirrelMail settings (such as login page image, or IMAP server) for each 
domain, each user, or each user group. 

<sect2>Multilogin plugin
<p>
Found in the main SquirrelMail plugins repository, this plugin allows the 
manual selection of login server on the login page.

<sect2>sqimap_get_user_server
<p>
SquirrelMail can use mapping by a user defined function
instead of IMAP server's address. If IMAP server's address is set to
<tt/map:some_function_name/, SquirrelMail functions should use provided username
as first function argument and replace  mapping with address returned by
function.

SquirrelMail provides example <tt>map_yp_alias</tt> function that uses ypmatch
program to get IMAP servers from yellowpages (NIS).

This feature is experimental. If some code does not take into account use of
mapping in imap server's address configuration, it might be broken.

<sect1>Other configuration issues
<p>
Other configuration issues.

<sect>Optimizing SquirrelMail
<p>
This chapter should explain what can help in speeding up your SquirrelMail
installation and improve its performance.

<sect1>Examining the whole chain
<p>
SquirrelMail is far from a stand alone product. The performance of a webmail system
depends on a lot of factors. It makes sense to look at each of these factors. You
should think about the following:
<itemize>
<item> Webserver. There's a lot of documentation about tuning Apache for example.
<item> PHP. Using PHP as a module is a lot faster than the CGI version.
<item> IMAP server. This starts with the choice of software. Different servers can have
radical performance differences.
<item> Authentication backend. Some backends have slow responses. Caching solutions
are available.
<item> Mail storage backend (mbox, maildir, database).
<item> SquirrelMail itself.
</itemize>

<sect1>PHP extensions
<p>
You can install or enable some PHP extensions which will make SquirrelMail
functionality run faster. SquirrelMail uses gettext functions for translations.
If PHP gettext extension is not present, the interface switches to slower
internal gettext implementation.

If you use CRAM-MD5 or DIGEST-MD5 authentication methods, SquirrelMail can use
PHP mhash functions. If PHP mhash extension is not present, interface uses own
hmac_md5 implementation.

In some cases SquirrelMail can take advantage of PHP recode or iconv
functions. These functions can be used to speedup decoding of CJK charsets.

<sect1>IMAP server extensions
<p>
If your IMAP server supports the IMAP SORT or THREAD extensions (most mainstream
servers do) turn them on. Server side sorting is faster than sorting in PHP
script.

Options can be enabled in SquirrelMail configuration utility:
<tscreen><verb>
4. General Options
  12. Allow server-side sorting: false (default) &gt; true
</verb></tscreen>

In general, always enable this option if your server supports it. It's faster
than sorting in SquirrelMail, and may prevent problems with users with very
large mailboxes. When not using server side sorting, these users may get
an empty page upon viewing the large mailbox, because the PHP sorting times
out.

SquirrelMail 1.5.1 and newer versions automatically turn on server side sorting
if the SORT or THREAD extension is declared in the IMAP CAPABILITY response.

Server side sorting can cause problems in SquirrelMail only when IMAP server
does not support charset used by selected SquirrelMail translation. SquirrelMail
can use more than 15 charsets in server side sorting and threading
commands. Courier IMAP server supports them only when compiled with the
<tt/--enable-unicode/ option. Cyrus IMAP (v.2.2.12) does not support some
multibyte charsets used by SquirrelMail.

SquirrelMail also allows to turn on server side threading support. This option 
allows end users to use threaded sorting. Threaded sorting requires more system
resources and you should enable it only if you want to provide such an option to
end users.

<sect1>Mailbox format
<p>
Default Unix mailbox format is slower than other formats and can increase server
loads when used with bigger mail folders. If you use UW IMAP server, you should
try switching to mbx mailbox format. Maildir mailboxes have higher bottlenecks
than formats that store entire mail folder in one file.

<sect1>Filtering
<p>
The SquirrelMail package includes the filters plugin, which can be used to sort
messages. It should be the last resort when you can't provide other means of 
filtering. This plugin is implemented in PHP and works only when users actively
log in to their mail accounts. Server side filtering performed by applications
such as procmail, maildrop or sieve provide more options, work even when users
do not actively log into their accounts, and are much faster and more efficient.
Also be aware that when using PHP-based message filtering against accounts with a
large amount of mail in them, login times can go through the roof.


<sect1>IMAP Proxy
<p>
A caching IMAP proxy server can vastly improve SquirrelMail performance by
cutting down on the number of times you have to create a new connection to the
IMAP server. It keeps server connections alive for reuse avoiding a new IMAP
connection for each SquirrelMail transaction. You run the proxy on your
webserver (SquirrelMail connects to localhost) and the Proxy connects to your
IMAP server. A side benefit is your logs are not full of IMAP logins. The
following caching IMAP proxy has worked well for other people with
SquirrelMail.

<url url="http://www.imapproxy.org/" name="Up-imapproxy"> is a caching IMAP
proxy server. It is open source and free. The package is written in C. Tested on
Solaris, Linux, IRIX and FreeBSD. The latest version allows log levels to be
configured at runtime from the config file.

<sect1>PHP cache
<p>
A PHP cache is a tool that might speed up PHP scripts. The general idea is to
check if a PHP script is modified since it was cached, and use the cached copy
if it wasn't. If the script is new or modifed, it's compiled and cached. The
benefit is that using precomplied, cached copies of the script are quicker then
compiling the script every time it's requested. Here are some examples of
products to try:

<url url="http://pecl.php.net/package/APC" name="Alternative PHP Cache"> is a
"free, open, and robust framework for caching and optimizing PHP intermediate
code". It's released under the PHP License.

<url url="http://eaccelerator.net/" name="eAccelerator"> is a fork of the old,
discontinued <url url="http://sourceforge.net/projects/turck-mmcache"
name="Turck MMCache for PHP"> project. It's described as a "free open-source
PHP accelerator, optimizer, encoder and dynamic content cache", and is released
under the GNU LGPL.

<url url="http://www.php-accelerator.co.uk/" name="PHP Accelerator"> is an
"easily installed PHP Zend engine extension that provides a PHP cache, and is
capable of delivering a substantial acceleration of PHP scripts without
requiring any script changes, loss of dynamic content, or other application
compromises". There is no official license for PHPA, and it's free for use.

<url url="http://www.zend.com/store/products/zend-optimizer.php" name="Zend
Optimizer"> is a "free application that runs the files encoded by the Zend
Guard, while enhancing the performance of PHP applications." It's released under
the Zend License Agreement.

<sect>Customizing SquirrelMail
<sect1>Plugins
<p>
SquirrelMail is a modular system, wherein its functionality can be extended 
with extra features provided by various plugins.

<sect2>Installing plugins
<p>
Plugins are installed by unpacking them into the SquirrelMail plugins
directory. Each plugin uses its own directory therein.

After unpacking a plugin, you should check its installation documentation 
and requirements. Some plugins need special plugin libraries, some need
configuration files, and some might need modifications in the main 
SquirrelMail scripts.

After the plugin is configured, you should start the SquirrelMail configuration 
utility, and select <tt/8. Plugins/ menu option.

This option displays two plugin categories: installed and available. The installed
category lists plugins that are currently enabled. The a available category lists 
plugins that are not currently enabled but are available for use.

<tscreen><verb>
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Plugins
  Installed Plugins
    1. abook_take
    2. delete_move_next
    3. listcommands
    4. message_details

  Available Plugins:
    5. administrator
    6. bug_report
    7. calendar
    8. filters
    9. fortune
    10. info
    11. mail_fetch
    12. newmail
    13. sent_subfolders
    14. spamcop
    15. squirrelspell
    16. translate

R   Return to Main Menu
C   Turn color on
S   Save data
Q   Quit

Command &gt;&gt;
</verb></tscreen>

Each plugin has a number written next to its name. If you enter that number
on the command line, you enable or disable the corresponding plugin.

The configuration utility should display any plugin present in plugins/ directory.

TODO: Add information about manually activating plugins?  See the bottom of this page:
http://www.squirrelmail.org/wiki/InstallingPlugins

<sect1>Themes and Styles<label id="themes">
<p>
TODO: As of 1.5.2, this changes....

SquirrelMail users are able to customize the look of the interface by selecting
a custom theme and the font style.

SquirrelMail themes define interface colors. Each theme is a set of 17 or more
colors.

You can easily create your own theme. It is very simple. Just go into the
<tt>themes/</tt> directory and create a file called <tt/yourtheme_theme.php/.
You then need to create an array with 17 elements (0-16). Below is a blank theme
sample followed by a description of what the different entries are for.

<tscreen><verb>
---<START>---
<?php

/**
 * My Theme
 *
 * Author: My name
 * Date:   Today's date
 *
 * Optional description
 */

global $color;
$color[0]   = '#xxxxxx';
$color[1]   = '#xxxxxx';
$color[2]   = '#xxxxxx';
$color[3]   = '#xxxxxx';
$color[4]   = '#xxxxxx';
$color[5]   = '#xxxxxx';
$color[6]   = '#xxxxxx';
$color[7]   = '#xxxxxx';
$color[8]   = '#xxxxxx';
$color[9]   = '#xxxxxx';
$color[10]  = '#xxxxxx';
$color[11]  = '#xxxxxx';
$color[12]  = '#xxxxxx';
$color[13]  = '#xxxxxx';
$color[14]  = '#xxxxxx';
$color[15]  = '#xxxxxx';
$color[16]  = '#xxxxxx';

---<END>---
</verb></tscreen>

Here is descriptions of what the different entries in the array are colors of.
The letter before the number denotes 'b' for background and 'f' for foreground
colors.

<tscreen><verb>
b  0: Title bar at the top of the page header
f  1: Error messages border, usually red
f  2: Error messages, usually red
b  3: Left folder list background color
b  4: Normal background color
b  5: Header of the message index [From, Date, Subject]
f  6: Normal text on the left folder list
f  7: Links in the right frame
f  8: Normal text [usually black]
b  9: Darker version of #0
b 10: Darker version of #9
f 11: Special folders color [Inbox, Trash, Sent]
b 12: Alternate color for message list [alters between #4 and this one]
f 13: Color for single-quoted text ('> text') when reading (default: #800000)
f 14: Color for text with more than one quote (default: #ff0000)
f 15: Non-selectable folders in the left frame (default: $color[6])
b 16: Highlight color (used in SquirrelMail 1.5.1 or later, default: $color[2])
</verb></tscreen>

Next all you have to do is run SquirrelMail configuration utility and add the
theme to the list of themes available to you.


<sect1>Site customizations
<p>
TODO:
Custom login page. Site control with the vlogin plugin.

<sect1>Internationalization
<p>
SquirrelMail interface can be used with different languages. Default language
can be set in SquirrelMail configuration utility. User can select other language
in Options &gt; Display Preferences. In SquirrelMail 1.4.5/1.5.1 or later
administrator can set default language to empty string. Then interface will try
to detect preferred translation from browser's preferred language setting.

SquirrelMail implements translations with gettext functions. Interface can use
PHP gettext extension or internal gettext implementation. If PHP gettext
extension is used, it might require special webserver setup. On Linux gettext
functions work only when appropriate system locales are available. On BSD you
should be able to set LC_ALL environment variable in PHP script. There are some
differences between GNU Gettext and Solaris Gettext implementations.

<sect2>Supported character sets
<p>
SquirrelMail displays interface in character set that depends on selected
translation. If SquirrelMail has to display email written in other charset,
interface uses special decoding functions that convert email to html codes that
can display foreign symbols in selected character set.

Stock SquirrelMail installation supports following charset decoding
functions:
<itemize>
  <item>cp1250 (windows-1250) - since 1.4.3 and 1.5.0
  <item>cp1251 (windows-1251)
  <item>cp1252 (windows-1252) - since 1.4.3 and 1.5.0
  <item>cp1253 (windows-1253)
  <item>cp1254 (windows-1254)
  <item>cp1255 (windows-1255) - since 1.4.3 and 1.5.0
  <item>cp1256 (windows-1256) - since 1.4.3 and 1.5.0
  <item>cp1257 (windows-1257)
  <item>cp1258 (windows-1258) - since 1.4.3 and 1.5.0
  <item>cp855 (ibm855) - since 1.4.3 and 1.5.0
  <item>cp866 (ibm866) - since 1.4.3 and 1.5.0
  <item>iso-8859-1
  <item>iso-8859-2
  <item>iso-8859-3 - since 1.4.3 and 1.5.0
  <item>iso-8859-4
  <item>iso-8859-5
  <item>iso-8859-6 - since 1.4.3 and 1.5.0
  <item>iso-8859-7
  <item>iso-8859-8 - since 1.4.3 and 1.5.0
  <item>iso-8859-9
  <item>iso-8859-10 - since 1.4.3 and 1.5.0
  <item>iso-8859-11 - since 1.4.3 and 1.5.0
  <item>iso-8859-13
  <item>iso-8859-14 - since 1.4.3 and 1.5.0
  <item>iso-8859-15
  <item>iso-8859-16 - since 1.4.3 and 1.5.0
  <item>iso-ir-111 - since 1.4.3 and 1.5.0
  <item>koi8-r
  <item>koi8-u - since 1.4.1 and 1.5.0
  <item>ns-4551_1
  <item>tis-620 - since 1.4.3 and 1.5.0
  <item>us-ascii - since 1.4.4
  <item>utf-8 - two and three byte characters are supported since 1.4.0.
  Four byte characters are supported since 1.4.4 and 1.5.1. Five and six
  byte character decoding is available since 1.4.4 and 1.5.1, but not enabled
  by default.
</itemize>

Decoding functions might break in some SquirrelMail versions, if PHP
mbstring.func_overload setting is enabled.

big-5, euc-kr and gb2312 characters can be displayed by Chinese and Korean
translations that use those character sets. Japanese translation can display
iso-2022-jp, euc-jp and shiftjis character sets. Other Eastern characters will
be displayed correctly only when character codes match big-5, euc-kr or gb2312
character sets.

Other character sets can be decoded with extra decoding library functions. These
functions are loaded automatically since 1.4.4 and 1.5.1, if appropriate files
are present in functions/decode directory.

<sect2>Message composition
<p>
SquirrelMail can create emails that use character set defined in user's
translation. Composed email must use symbols that are supported by selected
charset. If unsupported symbols are used, browser might use different character
set or html entities instead of entered characters.

Different character set can be used only with US English
translation. Administrator can set that character set in SquirrelMail
1.4.5/1.5.1 configuration utility. Users can also select different character
set, if the Custom Charset plugin is installed.

<sect1>Personal and shared address books
<p>
SquirrelMail supports multiple address book backends. Backends can be
configured to provide address books that store entries visible to one user
or to group of users or to all users that use same SquirrelMail installation.

SquirrelMail supports own flat file format, database supported by PHP Pear
DB libraries and LDAP.

LDAP address books are readonly and listing of addresses is available only
when users search for address.

Global address book is address book that can be shared between users. Global
address books can be configured in SquirrelMail since 1.4.4 version. Before
than admin had to modify functions/addressbook.php file. There is a typo in
1.4.4 code and if you want to have writeable global address
books, you should apply patch or use newer SquirrelMail version. See
<url url="http://www.squirrelmail.org/wiki/KnownBugs"
name="http://www.squirrelmail.org/wiki/KnownBugs">

If admin wants to use different backend for address book storage (IMSP,
personal LDAP address books, sticky notes attached to server),
SquirrelMail 1.4.5 and 1.5.1 provide hooks that allow plugins to attach their
own functions during address book initiation and admin needs only a plugin that
can interact with used data storage system. Older SquirrelMail versions
need two extra hooks in functions/addressbook.php. Current backend implementation
is limited to standard SquirrelMail address book format.

<sect2>How to use shared file based address book in SquirrelMail.
<p>
1. Get SquirrelMail 1.4.4, 1.4.5cvs, 1.5.1cvs or later.

2. If you want to use writable address book in 1.4.4, get <url
url="http://cvs.sf.net/viewcvs.py/squirrelmail/squirrelmail/src/addressbook.php?r1=1.58.2.16&amp;r2=1.58.2.17"
name="patch that fixes address book form">.

3. Create address book file. SquirrelMail address book uses CSV format
with | symbol as delimiter.

first field is nickname
second field - name
third field - surname
forth field - email
fifth field - additional information

for example:

<tscreen><verb>
test|Testname|Testsurname|test@example.org|testinfo
</verb></tscreen>

4. If you want writable address book, file must be writable by webserver
user.

5. After you have created address book file, go to SquirrelMail configuration
utility, select 6. Address Books option and configure address book in 3.
Global file address book.

If you enter only address book file name, system assumes that address book
is in data directory. For example: <tt/global_abook/. If you use data directory
to store global address book, remember that personal address books use
<tt/.abook/ suffix. You should not use global address book file with same
suffix, unless you understand what you are doing.

If you enter full path, system uses full path. For example:
<tt>/var/lib/squirrelmail/global_abook</tt>

If your configuration option contains slashes, but does not look like full
path, system assumes path relative to SquirrelMail top directory.

If you want to use global file based address book in older SquirrelMail
versions, take a look at <tt>functions/addressbook.php file</tt>. It contains some
comments that explain how to do that without configuration utility.

<sect>Security
<p>
This chapter should discuss some security aspects of your SquirrelMail
installation.

Used terms:
<descrip>
  <tag/TLS - Transport Layer Security/
  Transport Layer Security is cryptographic protocol which provides secure
  communications on the Internet. It is the successor to SSL v.3.0 protocol. The
  term "SSL" often applies to both TLS and SSL protocols. The differences
  between this protocol and SSL 3.0 are not dramatic, but they are significant
  enough that TLS 1.0 and SSL 3.0 do not interoperate (although TLS 1.0 does
  incorporate a mechanism by which a TLS implementation can back down to SSL
  3.0). TLS v.1.0 protocol is refined in RFC 2246.

  <tag/SSL - Secure Sockets Layer/
  Secure Sockets Layer is cryptographic protocol which provides secure
  communications on the Internet. Protocol runs on layers beneath application
  protocols such as HTTP, SMTP and NNTP and above the TCP transport protocol,
  which forms part of the TCP/IP protocol suite. SSL v.3.0 protocol is refined
  by Netscape Corporation. <url url="http://wp.netscape.com/eng/ssl3/"
  name="http://wp.netscape.com/eng/ssl3/">

  <tag/STARTTLS/
  STARTTLS is special extension to standard plain text communication
  protocols. STARTTLS extensions offer a way to upgrade to TLS from a plaintext
  connection, rather than use a separate port for encrypted communications. SMTP
  STARTTLS extension is refined in RFC 2487. IMAP STARTTLS extension is refined
  in RFC 2595. The Internet Engineering Task Force recommends use of STARTTLS
  instead of a separate port for encrypted communications.
</descrip>

<sect1>Main SquirrelMail attack vectors
<p>
SquirrelMail is webmail interface written in PHP. Webmail interface could be
attacked through specifically crafted emails, interface programming mistakes
and user information hijacking. It can be used to send unsolicited email
messages from hijacked or abused email account.

In order to prevent crafted email exploits SquirrelMail uses special <url
 url="http://linux.duke.edu/projects/mini/htmlfilter/" name="htmlfilter">
library to filter dangerous html code and prevents loading of remote web
data. Htmlfilter code needs constant updates because crackers discover various
design problems in web browser and can try exploiting them in webmail
interfaces. If you want to be safe, make sure that you are running latest
secured web browser version and SquirrelMail scripts are not outdated.

Interface programming mistakes usually can exploited only by authenticated
user. They can lead to hijacking of other users' data or executing scripts with
webserver user privileges. SquirrelMail developers are trying to prevent such
exploits. If you find some way to security of SquirrelMail scripts, inform about
it SquirrelMail developers.

User's login information can be hijacked in communications between IMAP and web
servers, session and data storage facilities on web server, communications
between web server and web browser and with tracking tools on user's machine.

In order to track emails sent through webmail interface SquirrelMail automatically
adds own Received: headers with sender's IP address, detected information about
used proxies and used username. This information can be hidden by encrypting it.
Webmail administrators can completely remove username and address information by
editing <tt>class/deliver/Deliver.class.php</tt> file. You should not remove
user information from email headers unless you make sure that you can retrieve
information with other tools or user forging is not possible in your
SquirrelMail setup. SquirrelMail developers don't support interface that removes
user information and should not be blamed when such interface is abused.

<sect1>Securing the connection to your IMAP server
<p>

SquirrelMail provides the option to connect to a remote IMAP server over 
an encrypted connection: Transport Layer Security (TLS and STARTTLS),
or to connect with only encrypted user credentials (CRAM-MD5 and DIGEST-MD5).

Note: There is no point in using TLS if your IMAP server is localhost. You need
root to sniff the loopback interface, and if you don't trust root, or an attacker
already has root, the game is over.  You've got a lot more to worry about beyond
having the loopback interface sniffed.

<sect2>Requirements
<p>

<sect3>CRAM/DIGEST-MD5
<p>
<itemize>
  <item> Digest-MD5 authentication needs PHP XML extension.
  <item> If you have the mhash extension to PHP, it will automatically
    be used, which may help performance on heavily loaded servers.
  <item> IMAP server support for these methods.
</itemize>

<sect3>TLS
<p>
<itemize>
  <item> PHP 4.3.0 or higher (Check Release Notes for PHP 4.3.x information)
  <item> The server you wish to use TLS on must have a dedicated port listening for
    TLS connections. (ie. port 993 for IMAP, 465 for SMTP).
  <item>  If you use PHP 4.3.x, OpenSSL support must be compiled staticly. See
    PHP bug #29934.
</itemize>

<sect3>STARTTLS
<p>
<itemize>
  <item>SquirrelMail 1.5.1 or higher
  <item>PHP 5.1.0rc1 or higher (stream_socket_enable_crypto() function)
  <item>Server with STARTTLS extension support
</itemize>

<sect2> Configuration
<p>
All configuration is done using conf.pl, under main menu option #2.
conf.pl can now attempt to detect which mechanisms your servers support.
You must have set the host and port before attempting to detect, or you
may get inaccurate results, or a long wait while the connection times out.

<sect2> Known Issues
<p>
DIGEST-MD5 has three different methods of operation. (qop options "auth",
"auth-int" and "auth-conf").  This implementation currently supports "auth"
only.  Work is being done to add the other two modes.

<sect1>HTTP vs HTTPS
<p>
SquirrelMail interface consists of dynamically generated HTML pages. These pages
are transfered to user's browser using HTTP protocol. HTTP protocol does not
have any built-in encryption functions. Information is transfered in plain
text. HTTP traffic contains login passwords and any information viewed or
entered in browser.

If you want to secure web traffic, you should use HTTP protocol with SSL
encryption. Check your web server documentation about SSL support.

If you have SquirrelMail install in unsecured HTTP and secured HTTPS servers,
SquirrelMail secure_login and show_ssl_link plugins can be used to warn users
about insecure connections and/or provide automatic redirection to a secured server.

In the Apache webserver, redirection can be implemented with Redirect directives and
the mod_rewrite module. For example:

<tscreen><verb>
# Redirect /squirrelmail link to secured server
Redirect permanent /squirrelmail https://secured.example.org/squirrelmail
</verb></tscreen>

<tscreen><verb>
# simple mod_rewrite example
&lt;Location /squirrelmail&gt;
RewriteEngine on
RewriteCond %{HTTPS} !=on
RewriteRule .* https://%{HTTP_HOST}:443%{REQUEST_URI} [QSA,R=permanent,L]
&lt;/Location&gt;
</verb></tscreen>

HTTP over SSL communications prevent "man in the middle" attacks between user's
machine and webmail server. SSL encryption makes it difficult to sniff web
traffic. Use of signed SSL certificates might prevent hostname spoofing
attacks.

<sect1>Session data security
<p>
Information about OTP and other information stored in session.

<sect1>Data directory security
<p>
About data directory security.

<sect1>Keyloggers
<p>
vkeyboard plugin.

<sect>FAQ
<p>
Daily questions

<sect>Solving problems
<sect1>Configtest
<p>
Using configtest.php as a first diagnose tool.
<sect1>Common PHP error messages
<sect2>unknown function session_id() call
<p>
missing session support

<sect2>Safe Mode
<p>
Running SquirrelMail with PHP [safe_mode] restrictions.

Settings that are used in safe mode
<itemize>
  <item>safe_mode
  <item>safe_mode_gid
  <item>safe_mode_include_dir
  <item>safe_mode_exec_dir
  <item>safe_mode_allowed_env_vars
  <item>safe_mode_protected_env_vars
  <item>open_basedir
  <item>disable_functions
  <item>disable_classes
</itemize>

It is possible to run SquirrelMail with safe_mode limitations, if you solve
some problems.

<em>1. safe_mode controls list of allowed executables.</em>

SquirrelMail has to use SMTP in order to send email or provider has to provide
wrapper for /usr/sbin/sendmail.

Fortune and SquirrelSpell plugins don't work, if provider does not add path to
fortune, ispell/aspell and cat programs into safe_mode_exec_dir variable.

<em>2. safe_mode controls list of allowed environment variables.</em>

time zone settings are not available if use of TZ variable is not allowed.

gettext extension on some operating systems depends on environment
variables. SquirrelMail does not set them in safe mode.

<em>3. directory hashing does not work</em>


<em>4. path to data directory should be relative.</em>

SquirrelMail configuration tools allow relative paths only with one upper
level. Longer relative paths are converted to full path.

<em>5. mail_fetch plugin can't control PHP script execution time limits.</em>

Your email fetching time must be within PHP max_execution_time limits.

<em>6. File ownership restrictions</em>

Default preference file must be owned by same user that owns other SquirrelMail
scrips. It must be readable by webserver's user.

<sect1>UW IMAP
<sect2>Login Disabled
<p>
uw-imapd server disables plain text logins by default in 2002 and newer
versions. This was done in order to follow security recommendations by IETF (The
Internet Engineering Task Force) and strict RFC 3501 security recommendations.

You can see this by telneting to your IMAP server and checking for
LOGIN=DISABLED string in CAPABILITY description.

SquirrelMail uses plain text logins. In order to enable plain text logins, you
will have to recompile UW IMAP or use the semi-official /etc/c-client.cf
configuration file.

See doc/imaprc.txt for further information. In order to enable plain text
logins, you must add
<verb>
set disable-plaintext nil
</verb>

Please remember that you need to use specific phrase in first line of
/etc/c-client.cf. This phrase does not look like normal option, but uw imap will
refuse to parse other options, if this phrase is not present. Correct sentence
can be found in uw imap source or imaprc.txt document.

WARNING: uw imap developers discourage usage of /etc/c-client.cf options

<em>OS specific notes</em>
<descrip>
  <tag/Debian Sarge 3.1 and newer versions/
  Plain text logins are not enabled. See bugs
  <url url="http://bugs.debian.org/227709" name="227709">,
  <url url="http://bugs.debian.org/239537" name="239537">,
  <url url="http://bugs.debian.org/273687" name="273687">.

  Create c-client.cf file manually or <tt>dpkg-reconfigure uw-imapd</tt>, enable
  IMAPS and set SquirrelMail to use IMAP over SSL or use different IMAP server.

  <tag/OpenBSD/
  there are two different packaging flavors. [default package] and
  [package with plaintext support]. Use plaintext package or enable plain text
  login in <tt>/etc/c-client.cf</tt>

  <tag/FreeBSD/
  You need to recompile package from ports and set WITHOUT_SSL or
  WITH_SSL_AND_PLAINTEXT variables. You must remove prepackaged versions of
  imap-uw and cclient before doing this. If you don't want to recompile -
  enable plain text login in /etc/c-client.cf.

  <tscreen><verb>
  cd /usr/ports/mail/imap-uw
  env WITH_SSL_AND_PLAINTEXT=YES make
  </verb></tscreen>
</descrip>

If you don't want to enable plain text login, you must use IMAP-SSL server on
different port. Other programs support STARTTLS on default IMAP port, but
SquirrelMail can't do that due to specific limitations of PHP SSL module and
restrictions of SquirrelMail IMAP implementation. You may be able to use the
IMAPS port of 993.

Please note, that if your IMAP server is on the same host as webserver with
SquirrelMail, SSL adds security features that are useless. During connection to
localhost password information is not transmitted over unsafe network. If you
want to secure your IMAP server, bind it to localhost address only or use
tcpwrappers or firewall to disable external connections.

<sect2>Long listing
<p>
Configure SquirrelMail with UW preset and don't remove <tt>mail/</tt> prefix in
Folder Options.

<sect1>Common interface error messages
<sect2>Unknown username or password
<p>
password is not ********. you need cookies.

<sect2>Session timeout
<p>
session.gc_maxlifetime

<sect2>Can't delete emails. Quota exceeded.
<p>
SquirrelMail's default behavior is to move messages to the trash folder when
they are deleted. If mail account has a quota and user is close to exceeding it,
user might experience problems. IMAP protocol does not support move
command. This is what happens when message is deleted:

<enum>
  <item>The message is copied to the trashcan.
  <item>The original message is marked for deletion.
  <item>The original message is expunged, i.e. removed from the original folder.
</enum>

If user tries to delete message that exceeds left quota, operation is aborted
with quota error message.

Issue can be solved by deleting messages from trash or disabling use of Trash in
SquirrelMail.

<enum>
  <item>Click "Options".
  <item>Click "Folder Preferences".
  <item>Set "Trash Folder" to "Do not use Trash".
  <item>Click "Submit".
</enum>

When trash is disabled, user can delete unneeded messages and reduce total
amount of data stored in his/her account.

Starting with SquirrelMail 1.5.0 version, there is a "Bypass Trash" check box when
viewing the message list or a message's content, that can be used to delete
mails without changing the trash folder setting per above.

Some quota setups can ignore files placed in Trash folder.

<sect>Support
<p>
Where do I get support? How do I provide feedback, patches, feature
suggestions, bug reports.

<sect1>SquirrelMail bug tracker
<p>
SquirrelMail uses Sourceforge system to manage bugs, patches and feature
requests. See <url url="http://www.squirrelmail.org/bugs" name="bug tracker
site">.

<sect1>SquirrelMail mailing lists
<p>
SquirrelMail uses Sourceforge mailing list services. See <url
url="http://lists.sourceforge.net/lists/listinfo/squirrelmail-users"
name="SquirrelMail users mailing list">.

Mailing list archives can be found on <url
url="http://sourceforge.net/mail/?group_id=311" name="Sourceforge"> and
<url url="http://www.gmane.org" name="Gmane">.

<sect1>Security issues
<p>
The SquirrelMail Project takes security very seriously. If you think you've
discovered a security-related issue in SquirrelMail, please contact developers
directly at <htmlurl url="mailto:security@squirrelmail.org"
name="security@squirrelmail.org">. Developers will do their best to work with
you towards a solution as quickly as possible and will of course give all credit
where it's due.

List of SquirrelMail security issues can be found at <url
url="http://www.squirrelmail.org/security/"
name="http://www.squirrelmail.org/security/">.

<sect>Presets<label id="presets">
<p>
This chapter lists SquirrelMail options set by D option in SquirrelMail
configuration utility.

It can be used if user can't run configuration utility and changes options
manually. Settings can be different if IMAP server uses shared folders.

Possible server values are:
<itemize>
  <item>cyrus = Cyrus IMAP server
  <item>uw = University of Washington's IMAP server
  <item>exchange = Microsoft Exchange IMAP server
  <item>courier = Courier IMAP server
  <item>macosx = Mac OS X Mailserver
  <item>hmailserver = hMailServer
  <item>mercury32 = Mercury/32
  <item>dovecot = Dovecot Secure IMAP server
</itemize>

<sect1>default settings
<p>
These are generic settings that should work in some IMAP servers.

<p>
<itemize>
  <item>imap_server_type = other
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = false
</itemize>

<sect1>cyrus preset
<p>
This preset is written for Cyrus IMAP.

<p>
<itemize>
  <item>imap_server_type = cyrus
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = .
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>uw preset
<p>
This preset is written for UW IMAPD.

<p>
<itemize>
  <item>imap_server_type = uw
  <item>default_folder_prefix = mail/
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = true
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = true
  <item>optional_delimiter = /
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>Since v.2002 UW IMAPD disabled plain text logins in default
  configuration. SquirrelMail can't use STARTTLS features provided by default
  server configuration. You might have to run IMAPS (IMAP over SSL) service or
  enable plain text logins.
</itemize>

<sect1>exchange preset
<p>
This preset is written for Microsoft Exchange IMAP server.

<p>
<itemize>
  <item>imap_server_type = exchange
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX/Deleted Items
  <item>sent_folder = INBOX/Sent Items
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

<sect1>courier preset
<p>
This preset is written for Courier IMAP server.

<p>
<itemize>
  <item>imap_server_type = courier
  <item>default_folder_prefix = INBOX.
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = .
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>macosx preset
<p>
This preset is written for IMAP server used by MacOS X

<p>
<itemize>
  <item>imap_server_type = macosx
  <item>default_folder_prefix = INBOX/
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>hmailserver preset
<p>
This preset is written for hMailServer

<p>
<itemize>
  <item>imap_server_type = hmailserver   (used in imap_search.php)
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = false
</itemize>

<sect1>mercury32 preset
<p>
This preset is used for Mercury Mail Transport System. Preset is available since
SquirrelMail 1.5.0. It was tested on Mercury32 v.4.01b

<p>
<itemize>
  <item>imap_server_type = mercury32
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = true
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>Server side sorting and threading are not supported.
  <item>Message flags are not supported.
  <item>IMAP folders can store messages _or_ other folders.
  <item>Supports STARTTLS, if configured.
  <item>May have issues with 8bit IMAP folder names.
</itemize>

$imap_server_type variable is used to handle imap folder subscription
differences.

Site URL: <url url="http://www.pmail.com" name="http://www.pmail.com">

<sect1>dovecot preset
<p>
Preset used for Dovecot Secure IMAP server. It is available since SquirrelMail
1.5.1. There is no code specific to Dovecot IMAP server. Preset provides only a
quick way to set correct folder settings. Tested on Dovecot v.0.99.14

<p>
<itemize>
  <item>imap_server_type = dovecot
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>IMAP server supports server side sorting and threading.
</itemize>

<sect1>bincimap preset
<p>
Preset is used with Binc IMAP server. Available since SquirrelMail 1.5.1. 
Due to available storage backend configuration options it is impossible 
to create single preset, which covers all setups.

<sect2>Default (1.2.13) configuration with Maildir++ depot and / delimiter
<p>
<itemize>
  <item>imap_server_type = bincimap (is used to handle INBOX in folder management)
  <item>default_folder_prefix = INBOX/
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = / (can be set to 'detect')
  <item>delete_folder = true
  <item>force_username_lowercase = false (depends on checkpassword)
</itemize>

<sect2>Default (1.3.4) configuration with IMAPdir depot - same as dovecot ?
<p>
<itemize>
  <item>imap_server_type = bincimap
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = / (can be set to 'detect')
  <item>delete_folder = true
  <item>force_username_lowercase = false (depends on checkpassword)
</itemize>

<sect2>Configuration with Maildir++ depot and . delimiter
<p>
Use courier preset.

<sect2>Comments
<p>
<itemize>
  <item>IMAP server does not support server side sorting and threading.
  <item>Plain text logins are disabled by default.
</itemize>

<sect>Links
<p>
This chapter provides links to some commonly used software and documents.

<sect1>RFC<label id="rfc">
<p>
The Requests for Comments (RFC) document series is a set of technical and
organizational notes about the Internet (originally the ARPANET), beginning in
1969. Memos in the RFC series discuss many aspects of computer networking,
including protocols, procedures, programs, and concepts, as well as meeting
notes, opinions, and sometimes humor.

These documents are available on many sites. For example:
<itemize>
  <item><url url="http://www.ietf.org/rfc.html" name="IETF">
  <item><url url="http://www.rfc-editor.org/rfc.html" name="RFC Editor">
  <item><url url="http://www.faqs.org/rfcs/" name="Internet FAQ Archives">
</itemize>

You might be able to find nearby RFC site by searching for 'rfc somenumber' in
your favorite search engine.

<sect1>SquirrelMail sites
<p>
List of sites and projects related to SquirrelMail

<itemize>
  <item><url url="http://www.squirrelmail.org" name="SquirrelMail site">
  <item><url url="http://sourceforge.net/projects/sm-plugins/" name="SM-Plugins
  project">
  <item><url url="http://sourceforge.net/projects/vadmin-plugin/" name="Vadmin
  plugin">
  <item><url url="http://sourceforge.net/projects/sasql/" name="SASql plugin">
  <item><url url="http://sourceforge.net/projects/retruserdata/"
  name="RetrieveUserData plugin">
  <item><url url="http://sourceforge.net/projects/serverfilters/" name="Server
  Side Filters plugin">
  <item><url url="http://sourceforge.net/projects/attachment-doc/"
  name="Attachment Doc plugin">
  <item><url url="http://sourceforge.net/projects/sqdeskplugins/"
  name="SquirrelMail desktop plugins">
  <item><url url="http://sourceforge.net/projects/secure-webmail/" name="SWM">
  <item><url url="http://www.braverock.com/gpg/" name="GPG plugin">
  <item><url url="http://www.sqmail.org" name="sqmail.org site">
  <item><url url="http://www.email.uoa.gr/projects/squirrelmail" name="University of Athens Squirrelmail projects (such as plugins avelsieve, useracl and ldapuserdata)">
</itemize>

<sect1>IMAP servers
<p>
<itemize>
  <item><url url="http://www.courier-mta.org" name="Courier">
  <item><url url="http://cyrusimap.web.cmu.edu" name="Cyrus IMAPd">
  <item><url url="http://www.washington.edu/imap/" name="UW IMAP">
  <item><url url="http://www.bincimap.org" name="Binc IMAP">
  <item><url url="http://www.dovecot.org" name="Dovecot">
  <item><url url="http://www.dbmail.org" name="DBMail">
</itemize>
</article>
