<!doctype linuxdoc system>
<!--
 Copyright (c) 2005 The SquirrelMail Project Team
 This file is part of SquirrelMail webmail interface documentation.

 SquirrelMail is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 SquirrelMail is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with SquirrelMail; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<article>

<title>SquirrelMail Administrator's Manual
<author>
by the SquirrelMail Project Team:
<!-- put your name here -->
</author>
<date>$Date$
<abstract>
This document provides information about SquirrelMail webmail interface 
install procedures.
</abstract>

<toc>

<p>
Document version: $Revision$

<sect>SquirrelMail overview
<p>
SquirrelMail is a standards-based webmail package written in PHP4. It includes 
built-in pure PHP support for the IMAP and SMTP protocols, and all pages render
in pure HTML 4.0 (with no JavaScript required) for maximum compatibility across
browsers. It has very few requirements and is very easy to configure and 
install. SquirrelMail has all the functionality you would want from an email 
client, including strong MIME support, address books, and folder manipulation.

<sect1>SquirrelMail Requirements
<sect2>Requirements for running SquirrelMail:
<p>
<itemize>
  <item>UNIX/Linux or Windows (UNIX/Linux version may be more functional)
  <item>IMAP4rev1 server (e.g. uw-imap, courier-imap, cyrus-imap, hMailServer, 
    Binc IMAP, CommuniGate, MS Exchange Server, MercuryMail 32, Dovecot)
  <item>Web server with PHP4 installed (preferably <url
    url="http://httpd.apache.org/" name="Apache httpd">)
  <item>You need at least PHP 4.1.2. If you are using PHP 4.1.2 or 4.1.4, please 
    upgrade to the latest version ( >= 4.1.2.11, >= 4.1.4.1 final).
  <item>Perl installed on the system. (If you don't have Perl, SquirrelMail will 
    work fine but it's very helpful for the initial configuration. 
    Alternatively, you can manually edit the configuration files.)
  <item>Unlike many PHP applications, SquirrelMail does not require MySQL or
    other database type.
  <item>If you use MySQL for the address book or for preferences, note that Pear DB
    lib is required to be installed and available in the include
    path.
  <item>Aspell installed if using the SquirrelSpell plugin, For UNIX/Linux see:
    <url url="http://aspell.sourceforge.net/" name="http://aspell.sourceforge.net/">
    or for Windows, see: <url url="http://aspell.net/win32/" name="http://aspell.net/win32/">
  <item>Japanese language support: PHP must be compiled with the
    <tt/--enable-mbstring/ option for SquirrelMail to read and write Japanese
    emails. Each user must also set their language option to Japanese.
</itemize>

<sect2>Preferred configuration:
<p>
<itemize>
  <item>PHP with gettext and mbstring support. Without gettext you lose in
    performance. mbstring is actually required if you want a good i18n webmail
    system.
  <item>IMAP server that supports sort and thread IMAP extensions. Without these
    extensions you lose in performance.
  <item>IMAP server should support Unicode. Courier IMAP must be compiled with
    <tt/--enable-unicode/ option. Without it some translations might be unable
    to use sorting and threading.
</itemize>

<sect2>Browser Requirements:
<p>
<itemize>
  <item>Cookies must be enabled in your browser.
</itemize>

<sect>Quick Start Guide
<p>
SquirrelMail can be downloaded from SquirrelMail site or provided by your OS
packager. It is configured with conf.pl utility, that is stored in <tt/config/
directory. You must configure SquirrelMail before using it. SquirrelMail can be
used by accessing it in web browser just like any other files and scripts
stored on your web server.

If you want to install SquirrelMail, check chapters about SquirrelMail
installation.

<sect1>Directory layout
<p>
SquirrelMail files are split into subdirectories according to file type and
provided functions.

<tscreen><verb>
squirrelmail/
  class/
  config/
  contrib/
  data/
  doc/
  functions/
    decode/
    encode/
  help/
  images/
  locale/
  plugins/
  po/
  src/
  templates/
  themes/
    css/
</verb></tscreen>

<tt/class/ directory stores various classes used with mime messages, email
delivery, localications and other interface functions.

<tt/config/ directory stores SquirrelMail configuration files and configuration
utility. <tt/conf.pl/ script is perl based utility used to manage SquirrelMail
configuration. <tt/config_default.php/ file stores default configuration
values. <tt/config.php/ file stores current configuration. <tt/config_local.php/
file can store local site configuration overrides and configration options that
are not supported by configuration utility. <tt/default_pref/ file stores <ref
id="default_pref" name="default configuration"> that is used when user's
preference file does not exist. <tt/default_pref/ file was stored in data
directory before SquirrelMail 1.5.1.

<tt/contrib/ directory stores files that provide extra features to SquirrelMail
package, but are not used directly in webmail interface.

<tt/data/ directory is default location for SquirrelMail users' preference
files. You should move that directory outside of web tree or make sure that it
can't be accessed by external user.

<tt/doc/ directory stores some documentation about SquirrelMail.

<tt/functions/ directory stores SquirrelMail function files. <tt/decode/
subdirectory stores charset decoding functions that are used to read emails
encoded in different charsets. <tt/encode/ directory stores charset encoding
functions that are used to convert emails to charset used in interface when
user replies or forwards email written in different charset.

<tt/help/ directory stores SquirrelMail help files. Information from these files
is displayed when user clicks on Help link in SquirrelMail menu line. Help files
use XML formating. They can be translated into different languages.

<tt/images/ directory stores various image files that can be used in interface.

<tt/locale/ directory stores SquirrelMail translations. User can select
preferred translation in SquirrelMail Display Options. 

<tt/plugins/ directory stores plugins that can be used to extend interface
functionality. Plugins are controlled in SquirrelMail configuration
utility. Some plugins might use own configuration files or functions provided by
other plugins. See README and INSTALL files in plugin's directory.

<tt/po/ directory stores scripts that are used to work with SquirrelMail
translation files. <tt/xgetpo/ script extracts translatable strings from
SquirrelMail script. <tt/mergepo/ script combines default strings with selected
translation. <tt/compilepo/ script compiles selected translation. These scripts
are usually used only by SquirrelMail translators.

<tt/src/ directory stores scripts that are used when user uses webmail
interface.

<tt/templates/ directory stores template files that can be used in SquirrelMail
1.5.1 and later versions.

<tt/themes/ directory stores SquirrelMail <ref id="themes"
name="themes">. <tt/css/ subdirectory stores style sheet files available to end
user.

<sect1>User data storage
<p>
SquirrelMail stores users' preferences and address books in simple text
files. Location of the files is set in SquirrelMail configuration, data
directory setting. SquirrelMail can also use <ref id="db-backend"
name="database"> or other other storage facility, if required preference
functions are provided by plugin.

Users' preferences are stored in <tt/.pref/ files. Address books are stored in
<tt/.abook/ files. <tt/.sig/ and <tt/.si&lt;somenumber&gt;/ files store users'
signatures. Some plugins might use other files to store users' data.

When data directory stores many files, directory access time can be
affected. Administrator can split preference files into subdirectories, if
directory hashing is enabled in SquirrelMail configuration.

<sect1>Address book format
<p>
SquirrelMail stores address books in CSV format. <tt/|/ symbol is used as field
delimiter. Address books can also be stored in <ref id="db-backend"
name="database"> or other other storage facility, if required functions are
provided by plugin. SquirrelMail can lookup addresses from LDAP directories, if
directories are configured in SquirrelMail configuration and PHP installation
contains LDAP support.

Address book file contains five fields. First field stores nicknames, short
names, that are used to identify address book entries. Second field stores
names. Third field stores surnames. Forth field stores email addresses. Fifth
field stores additional information.

Additional address book fields and functions can be provided by experimental
vcard address book format and some address book plugins. You can find list of
address book plugins on SquirrelMail site.

<sect>Installing SquirrelMail
<sect1>Quick and Dirty install
<p>
QuickAndDirty

<sect1>Installing SquirrelMail on Unix and Linux systems
<p>
SquirrelMailInstallUnix

<sect1>Installing SquirrelMail on Windows systems with Apache webserver
<p>
SquirrelMailInstallWin32Apache

<sect1>Installing SquirrelMail on Windows systems with IIS webserver
<p>
SquirrelMailInstallIIS

<sect1>Installing SquirrelMail on MaxOS X systems
<p>
MacInfoHere

<sect1>Prepackaged SquirrelMail installs
<p>
SquirrelMail provides RPM.

<sect>Upgrading SquirrelMail
<p>
This chapter talks about upgrading existing SquirrelMail install.

<sect1>Backup old install
<p>
Make a backup of your current SquirrelMail directory. If you use "cp", be
sure to use the "-Rp" options. -R means recursive, and -p will save the
permissions in the directory.

In this example, we assume that your httpd document directory is 
<tt>/home/httpd/html</tt>, that your SquirrelMail install is located at
<tt>/home/httpd/html/squirrelmail-1.0.6</tt>, and that your new SquirrelMail
version is 1.2.0. Substitute version numbers and names as required.

<verb>
$ cd /home/httpd/html
$ cp -Rp squirrelmail-1.0.6 squirrelmail-1.0.6.bak
</verb>

<sect1>Unpack new SquirrelMail
<p>
Make sure that you are in your httpd document directory (<tt>/home/httpd/html</tt>)
and then unpack the SquirrelMail archive (whatever the filename is): 
<verb>
$ tar -zxvf squirrelmail-1.2.0.tar.gz
</verb>

<sect1>Copy important files from old install
<p>
The important files to copy are:
<itemize>
  <item>Preferences
  <item>Config details
  <item>Plugins
  <item>Themes (if you've edited or added any of them)
</itemize>

<sect2>Preferences
<p>
First, copy your preference data over to the new directory. Usually
this is ok, but if you are upgrading from anything less than 1.0.5, we
strongly suggest you let your users reset their preferences. There
were important security upgrades in 1.0.5 regarding preference files.
<verb>
$ cp squirrelmail-1.0.6.bak/data/* squirrelmail-1.2.0/data
</verb>
  
<sect2>Config details
<p>
If at all possible, start the configuration process from scratch. It is 
much less prone to missing configuration options than copying your old
configuration. Ideally, you should just run conf.pl to reconfigure
SquirrelMail. If you decide to copy your old config.php over, we strongly
recommend that you run conf.pl to make sure things are correct and then save
the config file.
<verb>
$ cp squirrelmail-1.0.6.bak/config/config.php squirrelmail-1.2.0/config
</verb>

<sect2>Copy plugins
<p>
Like SquirrelMail, plugins are frequently updated for improvements, as well
as to make them compatible with new SquirrelMail releases. It is suggested
that you download new versions of your plugins at the same time you download
your SquirrelMail install, and that you install your plugins fresh (it's
easy, don't panic!).

You should not try replacing plugins that are already included in SquirrelMail
package. Download latest versions of plugins that are not included in new
SquirrelMail package or copy them from older SquirrelMail install.

<sect2>Copy themes
<p>
If you've created or modified themes, you should copy just those to the new
SquirrelMail themes directory. To just copy them all over to the new
SquirrelMail installation, you can run one command.
<verb>
$ cp -ui squirrelmail-1.0.6.bak/themes/* squirrelmail-1.2.0/themes/
</verb>

When <tt/-u/ flag is used, command copies only missing and newer files. 
When <tt/-i/ flag is used, command will ask for confirmation before replacing
existing files.

If you want to see your theme in future SquirrelMail packages, send it to 
SquirrelMail developers. They might add it to the themes in the standard
install!

<sect1>Change permissions
<p>
The web server must have write permission to the data directory. In this
example, we assume that user "nobody" and group "nobody" are the web server
as is often the case with Apache.
<verb>
  $ cd squirrelmail-1.2.0
  $ chown -R nobody:nobody data
</verb>
  
Check your webserver's configuration file. It might be using different
userid/groupid pair. Additionally, if "chown user:group" doesn't work, you can
use "chown user" and "chgrp group" instead. See the man pages for these commands
for more information.

If you are using SquirrelMail in setup with PHP safe_mode restrictions, data and
attachment directories should be owned by same user that owns other SquirrelMail
scripts. It must be writable by webserver group. Check <url
url="http://www.php.net/features.safe-mode" name="PHP Safe mode manual"> for
more details.

<sect1>Run conf.pl
<p>
Run config/conf.pl to see the new configuration options available with the
new version, as well as to verify that all of your old options are set
properly.

Always save your options, also if you haven't changed anything.
This will ensure that any problems with conf.pl that might have been solved
are effective to your installation.

If you want to make sure that your configuration contains all themes included in
new SquirrelMail package, go to theme options in configuration utility and 
run theme detection command.

<sect1>Version specific notes
<sect2>Upgrade from version older than 1.2.2 to later version.
<p>
In order to provide better internationalization support, developers have changed
names used by translations. From 1.2.2 SquirrelMail uses language and country
codes in translation names. In most of cases upgraded SquirrelMail should work
correctly. Only Norwegian Nynorsk (no_NO_ny) translation might need fixes. If
your user preference files contain <tt/language=no_NO_ny/ lines, these lines
should be updated to <tt/language=nn_NO/.

<sect2>Upgrade from 1.2.x or older versions to 1.4.x or later.
<p>
Layout changes. Plugins can break.

<sect2>Upgrade from version older than 1.4.4 to later version.
<p>
Translations are removed.

<sect2>Downgrade from 1.5.1 to older version.
<p>
Index Order options are not preserved.

<sect1>Recheck new install
<p>
Login into new SquirrelMail install and check if everything is working.

<sect1>Replace old install.
<p>
Redirect your users to new SquirrelMail install. You can use Apache <url 
url="http://httpd.apache.org/docs/mod/mod_alias.html#redirectperm"
name="RedirectPermanent"> directive or other redirection tools provided by your
webserver.

If you use SquirrelMail directory without version information, you can also
replace it with new SquirrelMail directory.
<verb>
$ mv /home/httpd/html/squirrelmail /home/httpd/html/squirrelmail.old
$ mv /home/httpd/html/squirrelmail.new /home/httpd/html/squirrelmail
</verb>

<sect1>DONE!
<p>
That should be all! The most important part is copying your users'
preference files back into the new data directory. This will insure that
your users will have their old preferences. Remember to do so with caution,
especially if you are upgrading from a version before 1.0.5 to version 1.0.5
or later.

<sect>Configuring SquirrelMail
<p>
SquirrelMail stores interface configuration in <tt>config/config.php</tt>
file. This file can be controlled with SquirrelMail configuration utility
<tt>config/conf.pl</tt>. Default configuration values are stored and 
documented in <tt>config/config_default.php</tt> file.

<sect1>Basic configuration
<p>
In order to use SquirrelMail you must create a configuration file. Default
configuration should adjusted to match your setup. Main things that should be
checked are:
<itemize>
  <item>Default domain (2. Server settings &gt; 1. Domain)
  <item>Addresses of IMAP and SMTP servers.
  <item>Type of IMAP server. See next chapter about <ref id="select-imap"
  name="selecting IMAP server">.
</itemize>

You might want to change:
<itemize>
  <item>Organization Preferences (1. Organization Preferences)
</itemize>

<sect1>Selecting IMAP server<label id="select-imap">
<p>
Some IMAP servers use specific IMAP folder layout or need some tweaks in IMAP
client's configuration. In order to set SquirrelMail according to your server's
requirements you might have to set more than 10 different SquirrelMail
options. SquirrelMail simplifies modification of these settings by providing
special configuration command. If you select D command in SquirrelMail
configuration utility, you will be asked to select your IMAP server and all
settings will be adjusted according to selected IMAP server.

For example, correct combination of SquirrelMail settings can hide INBOX prefix
in courier IMAP server. Value that is set in IMAP <tt/"Server software"/
configuration option can fix search issues in EIMS or hmailServer, provide
workarounds for some folder subscription errors in mercury32 IMAP server, but it
does not affect system folder names, folder prefix, delimiter and other specific
configuration options.

SquirrelMail provides configuration presets for Cyrus, UW, Courier, Exchange,
EIMS (Mac OS X), hmailServer, mercury32 and dovecot IMAP servers. See chapter
about <ref id="presets" name="Presets"> for more information about server
specific settings.

<sect1>Authentication
<p>
Prior to SquirrelMail 1.3.3, only plain text logins for IMAP and SMTP were
supported.  With the release of SquirrelMail 1.3.3, support for the
CRAM-MD5 and DIGEST-MD5 authentication mechanisms has been added. It is possible
to use different methods for both IMAP and SMTP. Unless the administrator
changes the authentication methods, SquirrelMail will default to the "classic"
plain text methods.

<sect2>Requirements
<p>
<verb>
CRAM/DIGEST-MD5
* SquirrelMail 1.3.3 or higher
* If you have the mhash extension to PHP, it will automatically
  be used, which may help performance on heavily loaded servers.
  ** NOTE: mhash is optional and no longer a requirement **
</verb>

<sect2>POP before SMTP
<p>
Some SMTP servers require POP3 authentication before accepting messages to
external recipients. SquirrelMail supports POP before SMTP since 1.2.6. You can
enable it in SMTP server settings <tt/"POP before SMTP"/ option. SquirrelMail
uses same username and password that was used for IMAP authentication.

<sect2>Using different username for SMTP relaying
<p>
If SMTP server uses different username and password for authentication,
since 1.5.1 version SquirrelMail can use one username and password for entire
SquirrelMail installation. They can be set in <tt>config/config_local.php</tt>
<tt/$smtp_sitewide_user/ and <tt/$smtp_sitewide_pass/ configuration variables.

If you use older SquirrelMail version and want to use single user/password
for SMTP authentication, you might have to install local SMTP server and set it
as smart relay. See SMTP server's documentation about email relaying through
other SMTP server.

<sect1>StartTLS, IMAPS, SSMTP
<p>
Since 1.3.3 version SquirrelMail is able to connect to IMAP and SMTP servers
that use TLS.

<sect2>Requirements
<p>
<itemize>
  <item>SquirrelMail 1.3.3 or higher
  <item>PHP 4.3.0 or higher
  <item>The "STARTTLS" command is NOT supported.  The server you wish to use TLS
  on must have a dedicated port listening for TLS connections.
  <item>If you use PHP 4.3.x, OpenSSL support must be compiled staticly. See
  PHP bug <url url="http://bugs.php.net/bug.php?id=29934" name="#29934">.
</itemize>

TLS can be enabled in SquirrelMail configuration utility, <tt>"Server settings"</tt>
section. If you want to use IMAP with TLS, you should select command that
updates IMAP settings, enable TLS in <tt>"Secure IMAP (TLS)"</tt> option and set
secure IMAP port in <tt>"IMAP Port"</tt> option. Secure IMAP servers use tcp 993
port by default. If you want to use SMTP with TLS, you should select command
that updates SMTP settings, enable TLS in <tt>"Secure SMTP (TLS)"</tt> option and
set secure SMTP port in <tt>"SMTP Port"</tt> option. Secure SMTP servers use tcp 465
port by default.

Some IMAP and SMTP servers support STARTTLS protocol (<ref id="rfc"
name="rfc2595 and rfc2487">), which allows to start TLS encryption on existing
plaintext connection. Current SquirrelMail TLS implementation can't use such
feature.

Note: There is no point in using TLS if your IMAP server is localhost. You need
root to sniff the loopback interface, and if you don't trust root, or an attacker
already has root, the game is over.  You've got a lot more to worry about beyond
having the loopback interface sniffed.

<sect1>Default user preferences<label id="default_pref">
<p>
If SquirrelMail interface uses file-based preferences, default preferences are
stored in your data directory in a file called "default_pref". As you add
plugins to your SquirrelMail installation, you might want to configure some of
them on your own account and then propagate those settings to all of your
users. Or you may simply want to change the default theme, etc. This is what you
need to do to accomplish that. 

<itemize>
  <item>Log into your own account and get all your configuration set to what
  you'd like the defaults to be.
  <item>Open your personal prefs file in your data directory (usually a file
  that looks something like "username.pref" or "user@domain.tld.pref", depending
  on what your usernames look like).
  <item>Find the relevant settings. Most plugin settings are identified by the
  plugin's name being the first thing on the line. Note that some plugins can
  have multiple setting lines. If you want to duplicate all of your settings,
  you can copy the entire file, but be careful that nothing with your name and
  email address or other personal items get copied.
  <item>Copy those settings into the "default_pref" file in the data directory.
</itemize>

Note that <tt/default_pref/ file works only for users that don't have own
preference file. If you want to add preferences to existing user accounts, you
should add them to their preference files. You can do that by editing user .pref
files or use Forced Preferences plugin.

If you use database based setup, default settings are stored in
<tt>functions/db_prefs.php</tt> file, <tt/$default/ parameter in dbPrefs class.

<sect1>Using database backends<label id="db-backend">
<p>
On sites with many users you might want to store your user data in a
database instead of in files. This document describes how to configure
SquirrelMail to do this.

Methods for storing both personal addressbooks and user preferences in
a database is included as a part of the distribution.

<sect2>Configuring PEAR DB
<p>
For this to work you must have the PEAR classes installed, these are part of
PHP. Once these are installed you must have sure the directory containg them is
a part of your PHP include_path. See the PHP documentation for information on
how to do that. 

Under Mandrake Linux the PEAR classes are installed as part of the php-devel
package and under FreeBSD they are installed as part of the mod_php4 or php4
port/package. Debian packages pear libraries in php4-pear package.

<sect2>Configuring addressbooks in database
<p>
First you need to create a database and a table to store the data in.
Create a database user with access to read and write in that table.

For MySQL you would normally do something like:

<tscreen><verb>
 (from the command line)
 # mysqladmin create squirrelmail

 (from the MySQL client)
 mysql> GRANT select,insert,update,delete ON squirrelmail.*
              TO squirreluser@localhost IDENTIFIED BY 'sqpassword';
</verb></tscreen>

The table structure should be similar to this (for MySQL):

<tscreen><verb>
CREATE TABLE address (
  owner varchar(128) DEFAULT '' NOT NULL,
  nickname varchar(16) DEFAULT '' NOT NULL,
  firstname varchar(128) DEFAULT '' NOT NULL,
  lastname varchar(128) DEFAULT '' NOT NULL,
  email varchar(128) DEFAULT '' NOT NULL,
  label varchar(255),
  PRIMARY KEY (owner,nickname),
  KEY firstname (firstname,lastname)
);
</verb></tscreen>

and similar to this for PostgreSQL:

<tscreen><verb>
CREATE TABLE "address" (
  "owner" varchar(128) NOT NULL,
  "nickname" varchar(16) NOT NULL,
  "firstname" varchar(128) NOT NULL,
  "lastname" varchar(128) NOT NULL,
  "email" varchar(128) NOT NULL,
  "label" varchar(255) NOT NULL,
  CONSTRAINT "address_pkey" PRIMARY KEY ("nickname", "owner")
);
CREATE  UNIQUE INDEX "address_firstname_key" ON "address"
  ("firstname", "lastname");
</verb></tscreen>

Next, edit your configuration so that the address book DSN (Data Source
Name) is specified, this can be done using either conf.pl or via the
administration plugin. The DSN should look something like:

<tscreen><verb>
 mysql://squirreluser:sqpassword@localhost/squirrelmail or
 pgsql://squirreluser:sqpassword@localhost/squirrelmail
</verb></tscreen>

See <url url="http://pear.php.net/manual/en/package.database.db.php" 
name="PHP Pear DB manual"> for more details about DSN syntax.

Global address book uses same table format as the one used for personal
address book. You can even use same table, if you don't have user named
'global'.

<sect2>Configuring preferences in database
<p>
This is done in much the same way as it is for storing your address
books in a database.

The table structure should be similar to this (for MySQL):

<tscreen><verb>
  CREATE TABLE userprefs (
    user varchar(128) DEFAULT '' NOT NULL,
    prefkey varchar(64) DEFAULT '' NOT NULL,
    prefval BLOB DEFAULT '' NOT NULL,
    PRIMARY KEY (user,prefkey)
  );
</verb></tscreen>

and for PostgreSQL:

<tscreen><verb>
CREATE TABLE "userprefs" (
   "username" varchar(128) NOT NULL,
   "prefkey" varchar(64) NOT NULL,
   "prefval" text,
   CONSTRAINT "userprefs_pkey" PRIMARY KEY ("prefkey", "username")
);
</verb></tscreen>

Next, edit your configuration so that the preferences DSN (Data Source
Name) is specified, this can be done using either SquirrelMail configuration
utility or via the administration plugin. The DSN should look something like:

<tscreen><verb>
 mysql://squirreluser:sqpassword@localhost/squirrelmail or
 pgsql://squirreluser:sqpassword@localhost/squirrelmail
</verb></tscreen>

Once configuration settings are saved, users' personal preferences will be
stored in a database. Some SquirrelMail plugins are designed to use different
files for users' data storage and won't be able to use database to store users'
data.

<sect1>Using more than one IMAP server
<p>
How to do that. Perdition, vlogin and multilogin plugs, sqimap_get_user_server function.

<sect1>Other configuration issues
<p>
Other configuration issues.

<sect>Optimizing SquirrelMail
<p>
This chapter should explain what can help in speeding up your SquirrelMail
installation.

<sect1>PHP extensions
<p>
SquirrelMail uses gettext functions for translations. If PHP gettext extension
is not present, interface switches to slower internal gettext implementation.

If you use CRAM-MD5 or DIGEST-MD5 authentication methods, SquirrelMail can use
PHP mhash functions. If PHP mhash extension is not present, interface uses own
hmac_md5 implementation.

In some cases SquirrelMail can take advantage of PHP recode or iconv
functions. These functions can be used to speedup decoding of Eastern charsets.

<sect1>IMAP server extensions
<p>
If your IMAP server supports the IMAP SORT or THREAD extensions (most mainstream
servers do) turn them on. Server side sorting is faster than sorting in PHP
script.

Options can be enabled in SquirrelMail configuration utility: 
<tscreen><verb>
4. General Options
  11. Allow server thread sort: false (default) &gt; true
  12. Allow server-side sorting: false (default) &gt; true 
</verb></tscreen>

Server side sorting can cause problems in SquirrelMail only when IMAP server
does not support charset used by selected SquirrelMail translation. SquirrelMail
can use more that 15 charsets in server side sorting and threading
commands. Courier IMAP server supports them only when compiled with
<tt/--enable-unicode/ option. Cyrus IMAP (v.2.2.12) does not support some
multibyte charsets used by SquirrelMail.

<sect1>Mailbox format
<p>
Default Unix mailbox format is slower than other formats and can increase server
loads when used with bigger mail folders. If you use UW IMAP server, you should
try switching to mbx mailbox format. Maildir mailboxes have higher bottlenecks
than formats that store entire mail folder in one file.

<sect1>Filtering
<p>
SquirrelMail package includes filters plugin, that can be used to sort
messages. This plugin is implemented in PHP and works on active mailbox. It
should be used only when server side solution is not available. Server side
filtering performed by procmail, maildrop or sieve provides more options and is
faster.

<sect1>IMAP Proxy
<p>
A caching IMAP proxy server can vastly improve SquirrelMail performance by
cutting down on the number of times you have to create a new connection to the
IMAP server. It keeps server connections alive for reuse avoiding a new IMAP
connection for each SquirrelMail transaction. You run the proxy on your
webserver (SquirrelMail connects to localhost) and the Proxy connects to your
IMAP server. A side benefit is your logs are not full of IMAP logins. The
following caching IMAP proxies have worked well for other people with
SquirrelMail.

<url url="http://www.imapproxy.org/" name="Up-imapproxy"> is a caching IMAP
proxy server. It is opensource and free. The package is written in C. Tested on
Solaris, Linux, IRIX and FreeBSD. The latest version allows log levels to be
configured at runtime from the config file.

<url url="http://www.horde.org/imapproxy/" name="other imapproxy project">
designed for use with Horde. Licensed under GPL and also works with
SquirrelMail.

<sect1>PHP cache
<p>
<url url="http://turck-mmcache.sf.net" name="Turck MMCache"> (Discontinued) is
an opcode cache that works on both *NIX and Win32. It speeds up PHP's
performance significantly. It's open source and is under active
development. Note: turck-mmcache is rumored to be dead. The developer was
supposedly hired by Zend, and the project looks abandoned with many open bug
reports. However, it still seems to be working for everyone and is possibly the
fastest of the three we list here. Software is licensed under GPL.

<url url="http://www.php-accelerator.co.uk/" name="PHP Accelerator"> is quite
similar to turck, but it also seems a bit stalled. However, the parent
company still exists, and so far it is running SquirrelMail with no
problems. Closed source, binary only accelerator.

<url url="http://eaccelerator.sourceforge.net/" name="EAccelerator"> is a fork
of the old Turck MMCache project. Improvements have been made so this is more
stable and also supports PHP5 now. Software is licensed under GPL.

<url url="http://www.zend.com/store/products/zend-optimizer.php" name="Zend
Optimizer"> is closed source product that runs on Windows, Linux, *BSD, and
Solaris. Works not only with Apache 1.3.x/2 but also IIS 4/5, Zeus and the
standalone CGI version of PHP.

See also:
<itemize>
  <item><url url="http://pecl.php.net/package/APC" name="PHP APC">
</itemize>

<sect>Customizing SquirrelMail
<sect1>Plugins
<p>
SquirrelMail is modular system. Interface can be extended with extra features
provided by various plugins.

<sect1>Themes<label id="themes">
<p>
Which color is da best.

<sect1>Site customizations
<p>
Own login page. Site control with vlogin plugin.

<sect1>Internationalization
<p>
Using interface with different languages.

<sect1>Personal and shared address books
<p>
Information about global address books here.

<sect>FAQ
<p>
Daily questions

<sect>Solving problems
<sect1>Common PHP error messages
<sect2>unknown function session_id() call
<p>
missing session support

<sect1>Common interface error messages
<sect2>Unknown username or password
<p>
password is not ********. you need cookies.

<sect2>Session timeout
<p>
session.gc_maxlifetime

<sect2>Can't delete emails. Quota exceeded.
<p>
SquirrelMail's default behaviour is to move messages to the trash folder when
they are deleted. If mail account has a quota and user is close to exceeding it,
user might experience problems. IMAP protocol does not support move
command. This is what happens when message is deleted:

<enum>
  <item>The message is copied to the trashcan.
  <item>The original message is marked for deletion.
  <item>The original message is expunged, i.e. removed from the original folder.
</enum>

If user tries to delete message that exceeds left quota, operation is aborted
with quota error message.

Issue can be solved by deleting messages from trash or disabling use of Trash in
SquirrelMail.

<enum>
  <item>Click "Options".
  <item>Click "Folder Preferences".
  <item>Set "Trash Folder" to "Do not use Trash".
  <item>Click "Submit".
</enum>

When trash is disabled, user can delete unneeded messages and reduce total
ammount of data stored in his/her account.

Starting with SquirrelMail 1.5.0 version, there is a "Bypass Trash" checkbox when
viewing the message list or a message's content, that can be used to delete
mails without changing the trash folder setting per above.

Some quota setups can ignore files placed in Trash folder.

<sect>Support
<p>
Where do I get support? How do I provide feedback, patches, feature 
suggestions, bug reports.

<sect1>SquirrelMail bugtracker
<p>
SquirrelMail uses Sourceforge system to manage bugs, patches and feature
requests. See <url url="http://www.squirrelmail.org/bugs" name="bug tracker
site">.

<sect1>SquirrelMail mailing lists
<p>
SquirrelMail uses Sourceforge mailing list services. See <url
url="http://lists.sourceforge.net/lists/listinfo/squirrelmail-users"
name="squirrelmail users mailing list">.

Mailing list archives can be found on <url 
url="http://sourceforge.net/mail/?group_id=311" name="Sourceforge"> and 
<url url="http://www.gmane.org" name="Gmane">.

<sect1>Security issues
<p>
The SquirrelMail Project takes security very seriously. If you think you've
discovered a security-related issue in SquirrelMail, please contact developers
directly at <htmlurl url="mailto:security@squirrelmail.org"
name="security@squirrelmail.org">. Developers will do their best to work with
you towards a solution as quickly as possible and will of course give all credit
where it's due.address used for security contact.

List of SquirrelMail security issues can be found at <url
url="http://www.squirrelmail.org/security/"
name="http://www.squirrelmail.org/security/">.

<sect>Presets<label id="presets">
<p>
This chapter lists SquirrelMail options set by D option in SquirrelMail
configuration utility.

It can be used if user can't run configuration utility and changes options
manually. Settings can be different if IMAP server uses shared folders.

Possible server values are:
<itemize>
  <item>cyrus = Cyrus IMAP server
  <item>uw = University of Washington's IMAP server
  <item>exchange = Microsoft Exchange IMAP server
  <item>courier = Courier IMAP server
  <item>macosx = Mac OS X Mailserver
  <item>hmailserver = hMailServer
  <item>mercury32 = Mercury/32
  <item>dovecot = Dovecot Secure IMAP server
</itemize>

<sect1>default settings
<p>
These are generic settings that should work in some IMAP servers.

<p>
<itemize>
  <item>imap_server_type = other
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = false
</itemize>

<sect1>cyrus preset
<p>
This preset is written for Cyrus IMAP.

<p>
<itemize>
  <item>imap_server_type = cyrus
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = .
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>uw preset
<p>
This preset is written for UW IMAPD.

<p>
<itemize>
  <item>imap_server_type = uw
  <item>default_folder_prefix = mail/
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = true
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = true
  <item>optional_delimiter = /
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>Since v.2002 UW IMAPD disabled plain text logins in default
  configuration. SquirrelMail can't use STARTTLS features provided by default
  server configuration. You might have to run IMAPS (IMAP over SSL) service or
  enable plain text logins.
</itemize>

<sect1>exchange preset
<p>
This preset is written for Microsoft Exchange IMAP server.

<p>
<itemize>
  <item>imap_server_type = exchange
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX/Deleted Items
  <item>sent_folder = INBOX/Sent Items
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

<sect1>courier preset
<p>
This preset is written for Courier IMAP server.

<p>
<itemize>
  <item>imap_server_type = courier
  <item>default_folder_prefix = INBOX.
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = .
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>macosx preset
<p>
This preset is written for IMAP server used by MacOS X

<p>
<itemize>
  <item>imap_server_type = macosx
  <item>default_folder_prefix = INBOX/
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = false
</itemize>

<sect1>hmailserver preset
<p>
This preset is written for hMailServer

<p>
<itemize>
  <item>imap_server_type = hmailserver   (used in imap_search.php)
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = INBOX.Trash
  <item>sent_folder = INBOX.Sent
  <item>draft_folder = INBOX.Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = false
</itemize>

<sect1>mercury32 preset
<p>
This preset is used for Mercury Mail Transport System. Preset is available since
SquirrelMail 1.5.0. It was tested on Mercury32 v.4.01b

<p>
<itemize>
  <item>imap_server_type = mercury32
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = true
  <item>show_contain_subfolders_option = true
  <item>optional_delimiter = detect
  <item>delete_folder = true
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>Server side sorting and threading are not supported.
  <item>Message flags are not supported.
  <item>IMAP folders can store messages _or_ other folders.
  <item>Supports STARTTLS, if configured.
  <item>May have issues with 8bit IMAP folder names.
</itemize>

$imap_server_type variable is used to handle imap folder subscription
differences.

Site URL: <url url="http://www.pmail.com" name="http://www.pmail.com">

<sect1>dovecot preset
<p>
Preset used for Dovecot Secure IMAP server. It is available since SquirrelMail
1.5.1. There is no code specific to Dovecot IMAP server. Preset provides only a
quick way to set correct folder settings. Tested on Dovecot v.0.99.14

<p>
<itemize>
  <item>imap_server_type = dovecot
  <item>default_folder_prefix = none (is set to empty string)
  <item>trash_folder = Trash
  <item>sent_folder = Sent
  <item>draft_folder = Drafts
  <item>show_prefix_option = false
  <item>default_sub_of_inbox = false
  <item>show_contain_subfolders_option = false
  <item>optional_delimiter = detect
  <item>delete_folder = false
  <item>force_username_lowercase = true
</itemize>

Comments:
<itemize>
  <item>IMAP server supports server side sorting and threading.
</itemize>

Site URL: <url url="http://www.dovecot.org" name="http://www.dovecot.org">

<sect1>Links
<p>
This chapter provides links to some commonly used software and documents.

<sect2>RFC<label id="rfc">
<p>
The Requests for Comments (RFC) document series is a set of technical and
organizational notes about the Internet (originally the ARPANET), beginning in
1969. Memos in the RFC series discuss many aspects of computer networking,
including protocols, procedures, programs, and concepts, as well as meeting
notes, opinions, and sometimes humor.

These documents are available on many sites. For example:
<itemize>
  <item><url url="http://www.ietf.org/rfc.html" name="IETF">
  <item><url url="http://www.rfc-editor.org/rfc.html" name="RFC Editor">
  <item><url url="http://www.faqs.org/rfcs/" name="Internet FAQ Archives">
</itemize>

You might be able to find nearby RFC site by searching for 'rfc somenumber' in
your favorite search engine.

<sect2>IMAP servers
<p>
<itemize>
  <item><url url="http://asg.web.cmu.edu/cyrus/" name="Cyrus">
</itemize>
</article>
